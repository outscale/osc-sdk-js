/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about the catalog entry.
 * @export
 * @interface CatalogEntry
 */
export interface CatalogEntry {
    /**
     * The category of the catalog entry (for example, `network`).
     * @type {string}
     * @memberof CatalogEntry
     */
    category?: string;
    /**
     * When returned and equal to `PER_MONTH`, the price of the catalog entry is calculated on a monthly basis.
     * @type {string}
     * @memberof CatalogEntry
     */
    flags?: string;
    /**
     * The API call associated with the catalog entry (for example, `CreateVms` or `RunInstances`).
     * @type {string}
     * @memberof CatalogEntry
     */
    operation?: string;
    /**
     * The service associated with the catalog entry (`TinaOS-FCU`, `TinaOS-LBU`, `TinaOS-DirectLink`, or `TinaOS-OOS`).
     * @type {string}
     * @memberof CatalogEntry
     */
    service?: string;
    /**
     * The Subregion associated with the catalog entry.
     * @type {string}
     * @memberof CatalogEntry
     */
    subregionName?: string;
    /**
     * The description of the catalog entry.
     * @type {string}
     * @memberof CatalogEntry
     */
    title?: string;
    /**
     * The type of resource associated with the catalog entry.
     * @type {string}
     * @memberof CatalogEntry
     */
    type?: string;
    /**
     * The unit price of the catalog entry, in the currency of the catalog of the Region where the API method was used.
     * @type {number}
     * @memberof CatalogEntry
     */
    unitPrice?: number;
}

export function CatalogEntryFromJSON(json: any): CatalogEntry {
    return CatalogEntryFromJSONTyped(json, false);
}

export function CatalogEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': !exists(json, 'Category') ? undefined : json['Category'],
        'flags': !exists(json, 'Flags') ? undefined : json['Flags'],
        'operation': !exists(json, 'Operation') ? undefined : json['Operation'],
        'service': !exists(json, 'Service') ? undefined : json['Service'],
        'subregionName': !exists(json, 'SubregionName') ? undefined : json['SubregionName'],
        'title': !exists(json, 'Title') ? undefined : json['Title'],
        'type': !exists(json, 'Type') ? undefined : json['Type'],
        'unitPrice': !exists(json, 'UnitPrice') ? undefined : json['UnitPrice'],
    };
}

export function CatalogEntryToJSON(value?: CatalogEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Category': value.category,
        'Flags': value.flags,
        'Operation': value.operation,
        'Service': value.service,
        'SubregionName': value.subregionName,
        'Title': value.title,
        'Type': value.type,
        'UnitPrice': value.unitPrice,
    };
}

