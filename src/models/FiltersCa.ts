/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * One or more filters.
 * @export
 * @interface FiltersCa
 */
export interface FiltersCa {
    /**
     * The fingerprints of the CAs.
     * @type {Array<string>}
     * @memberof FiltersCa
     */
    caFingerprints?: Array<string>;
    /**
     * The IDs of the CAs.
     * @type {Array<string>}
     * @memberof FiltersCa
     */
    caIds?: Array<string>;
    /**
     * The descriptions of the CAs.
     * @type {Array<string>}
     * @memberof FiltersCa
     */
    descriptions?: Array<string>;
}

export function FiltersCaFromJSON(json: any): FiltersCa {
    return FiltersCaFromJSONTyped(json, false);
}

export function FiltersCaFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiltersCa {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'caFingerprints': !exists(json, 'CaFingerprints') ? undefined : json['CaFingerprints'],
        'caIds': !exists(json, 'CaIds') ? undefined : json['CaIds'],
        'descriptions': !exists(json, 'Descriptions') ? undefined : json['Descriptions'],
    };
}

export function FiltersCaToJSON(value?: FiltersCa | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CaFingerprints': value.caFingerprints,
        'CaIds': value.caIds,
        'Descriptions': value.descriptions,
    };
}

