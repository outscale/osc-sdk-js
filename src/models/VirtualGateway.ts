/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.27
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NetToVirtualGatewayLink,
    NetToVirtualGatewayLinkFromJSON,
    NetToVirtualGatewayLinkFromJSONTyped,
    NetToVirtualGatewayLinkToJSON,
} from './NetToVirtualGatewayLink';
import {
    ResourceTag,
    ResourceTagFromJSON,
    ResourceTagFromJSONTyped,
    ResourceTagToJSON,
} from './ResourceTag';

/**
 * Information about the virtual gateway.
 * @export
 * @interface VirtualGateway
 */
export interface VirtualGateway {
    /**
     * The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported).
     * @type {string}
     * @memberof VirtualGateway
     */
    connectionType?: string;
    /**
     * The Net to which the virtual gateway is attached.
     * @type {Array<NetToVirtualGatewayLink>}
     * @memberof VirtualGateway
     */
    netToVirtualGatewayLinks?: Array<NetToVirtualGatewayLink>;
    /**
     * The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
     * @type {string}
     * @memberof VirtualGateway
     */
    state?: string;
    /**
     * One or more tags associated with the virtual gateway.
     * @type {Array<ResourceTag>}
     * @memberof VirtualGateway
     */
    tags?: Array<ResourceTag>;
    /**
     * The ID of the virtual gateway.
     * @type {string}
     * @memberof VirtualGateway
     */
    virtualGatewayId?: string;
}

export function VirtualGatewayFromJSON(json: any): VirtualGateway {
    return VirtualGatewayFromJSONTyped(json, false);
}

export function VirtualGatewayFromJSONTyped(json: any, ignoreDiscriminator: boolean): VirtualGateway {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'connectionType': !exists(json, 'ConnectionType') ? undefined : json['ConnectionType'],
        'netToVirtualGatewayLinks': !exists(json, 'NetToVirtualGatewayLinks') ? undefined : ((json['NetToVirtualGatewayLinks'] as Array<any>).map(NetToVirtualGatewayLinkFromJSON)),
        'state': !exists(json, 'State') ? undefined : json['State'],
        'tags': !exists(json, 'Tags') ? undefined : ((json['Tags'] as Array<any>).map(ResourceTagFromJSON)),
        'virtualGatewayId': !exists(json, 'VirtualGatewayId') ? undefined : json['VirtualGatewayId'],
    };
}

export function VirtualGatewayToJSON(value?: VirtualGateway | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ConnectionType': value.connectionType,
        'NetToVirtualGatewayLinks': value.netToVirtualGatewayLinks === undefined ? undefined : ((value.netToVirtualGatewayLinks as Array<any>).map(NetToVirtualGatewayLinkToJSON)),
        'State': value.state,
        'Tags': value.tags === undefined ? undefined : ((value.tags as Array<any>).map(ResourceTagToJSON)),
        'VirtualGatewayId': value.virtualGatewayId,
    };
}

