/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. >  > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html).<br /> # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * The version of the OpenAPI document: 1.30.0
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * One or more filters.
 * @export
 * @interface FiltersSnapshot
 */
export interface FiltersSnapshot {
    /**
     * The account aliases of the owners of the snapshots.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    accountAliases?: Array<string>;
    /**
     * The account IDs of the owners of the snapshots.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    accountIds?: Array<string>;
    /**
     * The descriptions of the snapshots.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    descriptions?: Array<string>;
    /**
     * The beginning of the time period, in ISO 8601 date-time format (for example, `2020-06-14T00:00:00.000Z`).
     * @type {Date}
     * @memberof FiltersSnapshot
     */
    fromCreationDate?: Date;
    /**
     * The account IDs which have permissions to create volumes.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    permissionsToCreateVolumeAccountIds?: Array<string>;
    /**
     * If true, lists all public volumes. If false, lists all private volumes.
     * @type {boolean}
     * @memberof FiltersSnapshot
     */
    permissionsToCreateVolumeGlobalPermission?: boolean;
    /**
     * The progresses of the snapshots, as a percentage.
     * @type {Array<number>}
     * @memberof FiltersSnapshot
     */
    progresses?: Array<number>;
    /**
     * The IDs of the snapshots.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    snapshotIds?: Array<string>;
    /**
     * The states of the snapshots (`in-queue` \| `pending` \| `completed` \| `error` \| `deleting`).
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    states?: Array<string>;
    /**
     * The keys of the tags associated with the snapshots.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    tagKeys?: Array<string>;
    /**
     * The values of the tags associated with the snapshots.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    tagValues?: Array<string>;
    /**
     * The key/value combination of the tags associated with the snapshots, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    tags?: Array<string>;
    /**
     * The end of the time period, in ISO 8601 date-time format (for example, `2020-06-30T00:00:00.000Z`).
     * @type {Date}
     * @memberof FiltersSnapshot
     */
    toCreationDate?: Date;
    /**
     * The IDs of the volumes used to create the snapshots.
     * @type {Array<string>}
     * @memberof FiltersSnapshot
     */
    volumeIds?: Array<string>;
    /**
     * The sizes of the volumes used to create the snapshots, in gibibytes (GiB).
     * @type {Array<number>}
     * @memberof FiltersSnapshot
     */
    volumeSizes?: Array<number>;
}

export function FiltersSnapshotFromJSON(json: any): FiltersSnapshot {
    return FiltersSnapshotFromJSONTyped(json, false);
}

export function FiltersSnapshotFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiltersSnapshot {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountAliases': !exists(json, 'AccountAliases') ? undefined : json['AccountAliases'],
        'accountIds': !exists(json, 'AccountIds') ? undefined : json['AccountIds'],
        'descriptions': !exists(json, 'Descriptions') ? undefined : json['Descriptions'],
        'fromCreationDate': !exists(json, 'FromCreationDate') ? undefined : (new Date(json['FromCreationDate'])),
        'permissionsToCreateVolumeAccountIds': !exists(json, 'PermissionsToCreateVolumeAccountIds') ? undefined : json['PermissionsToCreateVolumeAccountIds'],
        'permissionsToCreateVolumeGlobalPermission': !exists(json, 'PermissionsToCreateVolumeGlobalPermission') ? undefined : json['PermissionsToCreateVolumeGlobalPermission'],
        'progresses': !exists(json, 'Progresses') ? undefined : json['Progresses'],
        'snapshotIds': !exists(json, 'SnapshotIds') ? undefined : json['SnapshotIds'],
        'states': !exists(json, 'States') ? undefined : json['States'],
        'tagKeys': !exists(json, 'TagKeys') ? undefined : json['TagKeys'],
        'tagValues': !exists(json, 'TagValues') ? undefined : json['TagValues'],
        'tags': !exists(json, 'Tags') ? undefined : json['Tags'],
        'toCreationDate': !exists(json, 'ToCreationDate') ? undefined : (new Date(json['ToCreationDate'])),
        'volumeIds': !exists(json, 'VolumeIds') ? undefined : json['VolumeIds'],
        'volumeSizes': !exists(json, 'VolumeSizes') ? undefined : json['VolumeSizes'],
    };
}

export function FiltersSnapshotToJSON(value?: FiltersSnapshot | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AccountAliases': value.accountAliases,
        'AccountIds': value.accountIds,
        'Descriptions': value.descriptions,
        'FromCreationDate': value.fromCreationDate === undefined ? undefined : (value.fromCreationDate.toISOString()),
        'PermissionsToCreateVolumeAccountIds': value.permissionsToCreateVolumeAccountIds,
        'PermissionsToCreateVolumeGlobalPermission': value.permissionsToCreateVolumeGlobalPermission,
        'Progresses': value.progresses,
        'SnapshotIds': value.snapshotIds,
        'States': value.states,
        'TagKeys': value.tagKeys,
        'TagValues': value.tagValues,
        'Tags': value.tags,
        'ToCreationDate': value.toCreationDate === undefined ? undefined : (value.toCreationDate.toISOString()),
        'VolumeIds': value.volumeIds,
        'VolumeSizes': value.volumeSizes,
    };
}

