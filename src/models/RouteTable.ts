/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LinkRouteTable,
    LinkRouteTableFromJSON,
    LinkRouteTableFromJSONTyped,
    LinkRouteTableToJSON,
} from './LinkRouteTable';
import {
    ResourceTag,
    ResourceTagFromJSON,
    ResourceTagFromJSONTyped,
    ResourceTagToJSON,
} from './ResourceTag';
import {
    Route,
    RouteFromJSON,
    RouteFromJSONTyped,
    RouteToJSON,
} from './Route';
import {
    RoutePropagatingVirtualGateway,
    RoutePropagatingVirtualGatewayFromJSON,
    RoutePropagatingVirtualGatewayFromJSONTyped,
    RoutePropagatingVirtualGatewayToJSON,
} from './RoutePropagatingVirtualGateway';

/**
 * Information about the route table.
 * @export
 * @interface RouteTable
 */
export interface RouteTable {
    /**
     * One or more associations between the route table and Subnets.
     * @type {Array<LinkRouteTable>}
     * @memberof RouteTable
     */
    linkRouteTables?: Array<LinkRouteTable>;
    /**
     * The ID of the Net for the route table.
     * @type {string}
     * @memberof RouteTable
     */
    netId?: string;
    /**
     * Information about virtual gateways propagating routes.
     * @type {Array<RoutePropagatingVirtualGateway>}
     * @memberof RouteTable
     */
    routePropagatingVirtualGateways?: Array<RoutePropagatingVirtualGateway>;
    /**
     * The ID of the route table.
     * @type {string}
     * @memberof RouteTable
     */
    routeTableId?: string;
    /**
     * One or more routes in the route table.
     * @type {Array<Route>}
     * @memberof RouteTable
     */
    routes?: Array<Route>;
    /**
     * One or more tags associated with the route table.
     * @type {Array<ResourceTag>}
     * @memberof RouteTable
     */
    tags?: Array<ResourceTag>;
}

export function RouteTableFromJSON(json: any): RouteTable {
    return RouteTableFromJSONTyped(json, false);
}

export function RouteTableFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteTable {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'linkRouteTables': !exists(json, 'LinkRouteTables') ? undefined : ((json['LinkRouteTables'] as Array<any>).map(LinkRouteTableFromJSON)),
        'netId': !exists(json, 'NetId') ? undefined : json['NetId'],
        'routePropagatingVirtualGateways': !exists(json, 'RoutePropagatingVirtualGateways') ? undefined : ((json['RoutePropagatingVirtualGateways'] as Array<any>).map(RoutePropagatingVirtualGatewayFromJSON)),
        'routeTableId': !exists(json, 'RouteTableId') ? undefined : json['RouteTableId'],
        'routes': !exists(json, 'Routes') ? undefined : ((json['Routes'] as Array<any>).map(RouteFromJSON)),
        'tags': !exists(json, 'Tags') ? undefined : ((json['Tags'] as Array<any>).map(ResourceTagFromJSON)),
    };
}

export function RouteTableToJSON(value?: RouteTable | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'LinkRouteTables': value.linkRouteTables === undefined ? undefined : ((value.linkRouteTables as Array<any>).map(LinkRouteTableToJSON)),
        'NetId': value.netId,
        'RoutePropagatingVirtualGateways': value.routePropagatingVirtualGateways === undefined ? undefined : ((value.routePropagatingVirtualGateways as Array<any>).map(RoutePropagatingVirtualGatewayToJSON)),
        'RouteTableId': value.routeTableId,
        'Routes': value.routes === undefined ? undefined : ((value.routes as Array<any>).map(RouteToJSON)),
        'Tags': value.tags === undefined ? undefined : ((value.tags as Array<any>).map(ResourceTagToJSON)),
    };
}

