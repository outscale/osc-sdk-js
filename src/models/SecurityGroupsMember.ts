/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.25
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about a source or destination security group.
 * @export
 * @interface SecurityGroupsMember
 */
export interface SecurityGroupsMember {
    /**
     * The account ID that owns the source or destination security group.
     * @type {string}
     * @memberof SecurityGroupsMember
     */
    accountId?: string;
    /**
     * The ID of a source or destination security group that you want to link to the security group of the rule.
     * @type {string}
     * @memberof SecurityGroupsMember
     */
    securityGroupId?: string;
    /**
     * (Public Cloud only) The name of a source or destination security group that you want to link to the security group of the rule.
     * @type {string}
     * @memberof SecurityGroupsMember
     */
    securityGroupName?: string;
}

export function SecurityGroupsMemberFromJSON(json: any): SecurityGroupsMember {
    return SecurityGroupsMemberFromJSONTyped(json, false);
}

export function SecurityGroupsMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityGroupsMember {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'AccountId') ? undefined : json['AccountId'],
        'securityGroupId': !exists(json, 'SecurityGroupId') ? undefined : json['SecurityGroupId'],
        'securityGroupName': !exists(json, 'SecurityGroupName') ? undefined : json['SecurityGroupName'],
    };
}

export function SecurityGroupsMemberToJSON(value?: SecurityGroupsMember | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AccountId': value.accountId,
        'SecurityGroupId': value.securityGroupId,
        'SecurityGroupName': value.securityGroupName,
    };
}

