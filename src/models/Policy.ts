/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of this API is also available for download: <button>[GitHub repository](https://github.com/outscale/osc-api)</button><br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * The version of the OpenAPI document: 1.35.5
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about the policy.
 * @export
 * @interface Policy
 */
export interface Policy {
    /**
     * The date and time (UTC) at which the policy was created.
     * @type {Date}
     * @memberof Policy
     */
    creationDate?: Date;
    /**
     * A friendly name for the policy (between 0 and 1000 characters).
     * @type {string}
     * @memberof Policy
     */
    description?: string;
    /**
     * Indicates whether the policy can be linked to a group or an EIM user.
     * @type {boolean}
     * @memberof Policy
     */
    isLinkable?: boolean;
    /**
     * The date and time (UTC) at which the policy was last modified.
     * @type {Date}
     * @memberof Policy
     */
    lastModificationDate?: Date;
    /**
     * The OUTSCALE Resource Name (ORN) of the policy. For more information, see [Resource Identifiers](https://docs.outscale.com/en/userguide/Resource-Identifiers.html).
     * @type {string}
     * @memberof Policy
     */
    orn?: string;
    /**
     * The path to the policy.
     * @type {string}
     * @memberof Policy
     */
    path?: string;
    /**
     * The ID of the policy default version.
     * @type {string}
     * @memberof Policy
     */
    policyDefaultVersionId?: string;
    /**
     * The ID of the policy.
     * @type {string}
     * @memberof Policy
     */
    policyId?: string;
    /**
     * The name of the policy.
     * @type {string}
     * @memberof Policy
     */
    policyName?: string;
    /**
     * The number of resources attached to the policy.
     * @type {number}
     * @memberof Policy
     */
    resourcesCount?: number;
}

export function PolicyFromJSON(json: any): Policy {
    return PolicyFromJSONTyped(json, false);
}

export function PolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Policy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'creationDate': !exists(json, 'CreationDate') ? undefined : (new Date(json['CreationDate'])),
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'isLinkable': !exists(json, 'IsLinkable') ? undefined : json['IsLinkable'],
        'lastModificationDate': !exists(json, 'LastModificationDate') ? undefined : (new Date(json['LastModificationDate'])),
        'orn': !exists(json, 'Orn') ? undefined : json['Orn'],
        'path': !exists(json, 'Path') ? undefined : json['Path'],
        'policyDefaultVersionId': !exists(json, 'PolicyDefaultVersionId') ? undefined : json['PolicyDefaultVersionId'],
        'policyId': !exists(json, 'PolicyId') ? undefined : json['PolicyId'],
        'policyName': !exists(json, 'PolicyName') ? undefined : json['PolicyName'],
        'resourcesCount': !exists(json, 'ResourcesCount') ? undefined : json['ResourcesCount'],
    };
}

export function PolicyToJSON(value?: Policy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CreationDate': value.creationDate === undefined ? undefined : (value.creationDate.toISOString()),
        'Description': value.description,
        'IsLinkable': value.isLinkable,
        'LastModificationDate': value.lastModificationDate === undefined ? undefined : (value.lastModificationDate.toISOString()),
        'Orn': value.orn,
        'Path': value.path,
        'PolicyDefaultVersionId': value.policyDefaultVersionId,
        'PolicyId': value.policyId,
        'PolicyName': value.policyName,
        'ResourcesCount': value.resourcesCount,
    };
}

