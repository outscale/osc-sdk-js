/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BlockDeviceMappingVmUpdate,
    BlockDeviceMappingVmUpdateFromJSON,
    BlockDeviceMappingVmUpdateFromJSONTyped,
    BlockDeviceMappingVmUpdateToJSON,
} from './BlockDeviceMappingVmUpdate';

/**
 * 
 * @export
 * @interface UpdateVmRequest
 */
export interface UpdateVmRequest {
    /**
     * One or more block device mappings of the VM.
     * @type {Array<BlockDeviceMappingVmUpdate>}
     * @memberof UpdateVmRequest
     */
    blockDeviceMappings?: Array<BlockDeviceMappingVmUpdate>;
    /**
     * This parameter is not available. It is present in our API for the sake of historical compatibility with AWS.
     * @type {boolean}
     * @memberof UpdateVmRequest
     */
    bsuOptimized?: boolean;
    /**
     * If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can.
     * @type {boolean}
     * @memberof UpdateVmRequest
     */
    deletionProtection?: boolean;
    /**
     * If true, checks whether you have the required permissions to perform the action.
     * @type {boolean}
     * @memberof UpdateVmRequest
     */
    dryRun?: boolean;
    /**
     * (Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net.
     * @type {boolean}
     * @memberof UpdateVmRequest
     */
    isSourceDestChecked?: boolean;
    /**
     * The name of the keypair.<br />
     * To complete the replacement, manually replace the old public key with the new public key in the ~/.ssh/authorized_keys file located in the VM. Restart the VM to apply the change.
     * @type {string}
     * @memberof UpdateVmRequest
     */
    keypairName?: string;
    /**
     * The performance of the VM (`medium` \| `high` \|  `highest`).
     * @type {string}
     * @memberof UpdateVmRequest
     */
    performance?: UpdateVmRequestPerformanceEnum;
    /**
     * One or more IDs of security groups for the VM.
     * @type {Array<string>}
     * @memberof UpdateVmRequest
     */
    securityGroupIds?: Array<string>;
    /**
     * The Base64-encoded MIME user data, limited to 500 kibibytes (KiB).
     * @type {string}
     * @memberof UpdateVmRequest
     */
    userData?: string;
    /**
     * The ID of the VM.
     * @type {string}
     * @memberof UpdateVmRequest
     */
    vmId: string;
    /**
     * The VM behavior when you stop it. If set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated.
     * @type {string}
     * @memberof UpdateVmRequest
     */
    vmInitiatedShutdownBehavior?: string;
    /**
     * The type of VM. For more information, see [Instance Types](https://docs.outscale.com/en/userguide/Instance-Types.html).
     * @type {string}
     * @memberof UpdateVmRequest
     */
    vmType?: string;
}


/**
 * @export
 */
export const UpdateVmRequestPerformanceEnum = {
    Medium: 'medium',
    High: 'high',
    Highest: 'highest'
} as const;
export type UpdateVmRequestPerformanceEnum = typeof UpdateVmRequestPerformanceEnum[keyof typeof UpdateVmRequestPerformanceEnum];


export function UpdateVmRequestFromJSON(json: any): UpdateVmRequest {
    return UpdateVmRequestFromJSONTyped(json, false);
}

export function UpdateVmRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateVmRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockDeviceMappings': !exists(json, 'BlockDeviceMappings') ? undefined : ((json['BlockDeviceMappings'] as Array<any>).map(BlockDeviceMappingVmUpdateFromJSON)),
        'bsuOptimized': !exists(json, 'BsuOptimized') ? undefined : json['BsuOptimized'],
        'deletionProtection': !exists(json, 'DeletionProtection') ? undefined : json['DeletionProtection'],
        'dryRun': !exists(json, 'DryRun') ? undefined : json['DryRun'],
        'isSourceDestChecked': !exists(json, 'IsSourceDestChecked') ? undefined : json['IsSourceDestChecked'],
        'keypairName': !exists(json, 'KeypairName') ? undefined : json['KeypairName'],
        'performance': !exists(json, 'Performance') ? undefined : json['Performance'],
        'securityGroupIds': !exists(json, 'SecurityGroupIds') ? undefined : json['SecurityGroupIds'],
        'userData': !exists(json, 'UserData') ? undefined : json['UserData'],
        'vmId': json['VmId'],
        'vmInitiatedShutdownBehavior': !exists(json, 'VmInitiatedShutdownBehavior') ? undefined : json['VmInitiatedShutdownBehavior'],
        'vmType': !exists(json, 'VmType') ? undefined : json['VmType'],
    };
}

export function UpdateVmRequestToJSON(value?: UpdateVmRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BlockDeviceMappings': value.blockDeviceMappings === undefined ? undefined : ((value.blockDeviceMappings as Array<any>).map(BlockDeviceMappingVmUpdateToJSON)),
        'BsuOptimized': value.bsuOptimized,
        'DeletionProtection': value.deletionProtection,
        'DryRun': value.dryRun,
        'IsSourceDestChecked': value.isSourceDestChecked,
        'KeypairName': value.keypairName,
        'Performance': value.performance,
        'SecurityGroupIds': value.securityGroupIds,
        'UserData': value.userData,
        'VmId': value.vmId,
        'VmInitiatedShutdownBehavior': value.vmInitiatedShutdownBehavior,
        'VmType': value.vmType,
    };
}

