/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Phase1Options,
    Phase1OptionsFromJSON,
    Phase1OptionsFromJSONTyped,
    Phase1OptionsToJSON,
} from './Phase1Options';
import {
    Phase2Options,
    Phase2OptionsFromJSON,
    Phase2OptionsFromJSONTyped,
    Phase2OptionsToJSON,
} from './Phase2Options';

/**
 * Information about the VPN options.
 * @export
 * @interface VpnOptions
 */
export interface VpnOptions {
    /**
     * 
     * @type {Phase1Options}
     * @memberof VpnOptions
     */
    phase1Options?: Phase1Options;
    /**
     * 
     * @type {Phase2Options}
     * @memberof VpnOptions
     */
    phase2Options?: Phase2Options;
    /**
     * The range of inside IPs for the tunnel. This must be a /30 CIDR block from the 169.254.254.0/24 range.
     * @type {string}
     * @memberof VpnOptions
     */
    tunnelInsideIpRange?: string;
}

export function VpnOptionsFromJSON(json: any): VpnOptions {
    return VpnOptionsFromJSONTyped(json, false);
}

export function VpnOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): VpnOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'phase1Options': !exists(json, 'Phase1Options') ? undefined : Phase1OptionsFromJSON(json['Phase1Options']),
        'phase2Options': !exists(json, 'Phase2Options') ? undefined : Phase2OptionsFromJSON(json['Phase2Options']),
        'tunnelInsideIpRange': !exists(json, 'TunnelInsideIpRange') ? undefined : json['TunnelInsideIpRange'],
    };
}

export function VpnOptionsToJSON(value?: VpnOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Phase1Options': Phase1OptionsToJSON(value.phase1Options),
        'Phase2Options': Phase2OptionsToJSON(value.phase2Options),
        'TunnelInsideIpRange': value.tunnelInsideIpRange,
    };
}

