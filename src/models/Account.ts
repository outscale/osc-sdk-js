/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.25
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about the account.
 * @export
 * @interface Account
 */
export interface Account {
    /**
     * The ID of the account.
     * @type {string}
     * @memberof Account
     */
    accountId?: string;
    /**
     * One or more additional email addresses for the account. These addresses are used for notifications only.
     * @type {Array<string>}
     * @memberof Account
     */
    additionalEmails?: Array<string>;
    /**
     * The city of the account owner.
     * @type {string}
     * @memberof Account
     */
    city?: string;
    /**
     * The name of the company for the account.
     * @type {string}
     * @memberof Account
     */
    companyName?: string;
    /**
     * The country of the account owner.
     * @type {string}
     * @memberof Account
     */
    country?: string;
    /**
     * The ID of the customer.
     * @type {string}
     * @memberof Account
     */
    customerId?: string;
    /**
     * The main email address for the account. This address is used for your credentials and for notifications.
     * @type {string}
     * @memberof Account
     */
    email?: string;
    /**
     * The first name of the account owner.
     * @type {string}
     * @memberof Account
     */
    firstName?: string;
    /**
     * The job title of the account owner.
     * @type {string}
     * @memberof Account
     */
    jobTitle?: string;
    /**
     * The last name of the account owner.
     * @type {string}
     * @memberof Account
     */
    lastName?: string;
    /**
     * The mobile phone number of the account owner.
     * @type {string}
     * @memberof Account
     */
    mobileNumber?: string;
    /**
     * The landline phone number of the account owner.
     * @type {string}
     * @memberof Account
     */
    phoneNumber?: string;
    /**
     * The state/province of the account.
     * @type {string}
     * @memberof Account
     */
    stateProvince?: string;
    /**
     * The value added tax (VAT) number for the account.
     * @type {string}
     * @memberof Account
     */
    vatNumber?: string;
    /**
     * The ZIP code of the city.
     * @type {string}
     * @memberof Account
     */
    zipCode?: string;
}

export function AccountFromJSON(json: any): Account {
    return AccountFromJSONTyped(json, false);
}

export function AccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Account {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'AccountId') ? undefined : json['AccountId'],
        'additionalEmails': !exists(json, 'AdditionalEmails') ? undefined : json['AdditionalEmails'],
        'city': !exists(json, 'City') ? undefined : json['City'],
        'companyName': !exists(json, 'CompanyName') ? undefined : json['CompanyName'],
        'country': !exists(json, 'Country') ? undefined : json['Country'],
        'customerId': !exists(json, 'CustomerId') ? undefined : json['CustomerId'],
        'email': !exists(json, 'Email') ? undefined : json['Email'],
        'firstName': !exists(json, 'FirstName') ? undefined : json['FirstName'],
        'jobTitle': !exists(json, 'JobTitle') ? undefined : json['JobTitle'],
        'lastName': !exists(json, 'LastName') ? undefined : json['LastName'],
        'mobileNumber': !exists(json, 'MobileNumber') ? undefined : json['MobileNumber'],
        'phoneNumber': !exists(json, 'PhoneNumber') ? undefined : json['PhoneNumber'],
        'stateProvince': !exists(json, 'StateProvince') ? undefined : json['StateProvince'],
        'vatNumber': !exists(json, 'VatNumber') ? undefined : json['VatNumber'],
        'zipCode': !exists(json, 'ZipCode') ? undefined : json['ZipCode'],
    };
}

export function AccountToJSON(value?: Account | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AccountId': value.accountId,
        'AdditionalEmails': value.additionalEmails,
        'City': value.city,
        'CompanyName': value.companyName,
        'Country': value.country,
        'CustomerId': value.customerId,
        'Email': value.email,
        'FirstName': value.firstName,
        'JobTitle': value.jobTitle,
        'LastName': value.lastName,
        'MobileNumber': value.mobileNumber,
        'PhoneNumber': value.phoneNumber,
        'StateProvince': value.stateProvince,
        'VatNumber': value.vatNumber,
        'ZipCode': value.zipCode,
    };
}

