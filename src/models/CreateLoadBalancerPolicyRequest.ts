/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateLoadBalancerPolicyRequest
 */
export interface CreateLoadBalancerPolicyRequest {
    /**
     * The lifetime of the cookie, in seconds. If not specified, the default value of this parameter is 1, which means that the sticky session lasts for the duration of the browser session.
     * @type {number}
     * @memberof CreateLoadBalancerPolicyRequest
     */
    cookieExpirationPeriod?: number;
    /**
     * The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie.
     * @type {string}
     * @memberof CreateLoadBalancerPolicyRequest
     */
    cookieName?: string;
    /**
     * If true, checks whether you have the required permissions to perform the action.
     * @type {boolean}
     * @memberof CreateLoadBalancerPolicyRequest
     */
    dryRun?: boolean;
    /**
     * The name of the load balancer for which you want to create a policy.
     * @type {string}
     * @memberof CreateLoadBalancerPolicyRequest
     */
    loadBalancerName: string;
    /**
     * The name of the policy. This name must be unique and consist of alphanumeric characters and dashes (-).
     * @type {string}
     * @memberof CreateLoadBalancerPolicyRequest
     */
    policyName: string;
    /**
     * The type of stickiness policy you want to create: `app` or `load_balancer`.
     * @type {string}
     * @memberof CreateLoadBalancerPolicyRequest
     */
    policyType: string;
}

export function CreateLoadBalancerPolicyRequestFromJSON(json: any): CreateLoadBalancerPolicyRequest {
    return CreateLoadBalancerPolicyRequestFromJSONTyped(json, false);
}

export function CreateLoadBalancerPolicyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLoadBalancerPolicyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cookieExpirationPeriod': !exists(json, 'CookieExpirationPeriod') ? undefined : json['CookieExpirationPeriod'],
        'cookieName': !exists(json, 'CookieName') ? undefined : json['CookieName'],
        'dryRun': !exists(json, 'DryRun') ? undefined : json['DryRun'],
        'loadBalancerName': json['LoadBalancerName'],
        'policyName': json['PolicyName'],
        'policyType': json['PolicyType'],
    };
}

export function CreateLoadBalancerPolicyRequestToJSON(value?: CreateLoadBalancerPolicyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CookieExpirationPeriod': value.cookieExpirationPeriod,
        'CookieName': value.cookieName,
        'DryRun': value.dryRun,
        'LoadBalancerName': value.loadBalancerName,
        'PolicyName': value.policyName,
        'PolicyType': value.policyType,
    };
}

