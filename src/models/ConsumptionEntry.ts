/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about the resources consumed during the specified time period.
 * @export
 * @interface ConsumptionEntry
 */
export interface ConsumptionEntry {
    /**
     * The ID of your TINA account.
     * @type {string}
     * @memberof ConsumptionEntry
     */
    accountId?: string;
    /**
     * The category of the resource (for example, `network`).
     * @type {string}
     * @memberof ConsumptionEntry
     */
    category?: string;
    /**
     * The beginning of the time period.
     * @type {string}
     * @memberof ConsumptionEntry
     */
    fromDate?: string;
    /**
     * The API call that triggered the resource consumption (for example, `RunInstances` or `CreateVolume`).
     * @type {string}
     * @memberof ConsumptionEntry
     */
    operation?: string;
    /**
     * The ID of the TINA account which is billed for your consumption. It can be different from your account in the `AccountId` parameter.
     * @type {string}
     * @memberof ConsumptionEntry
     */
    payingAccountId?: string;
    /**
     * The service of the API call (`TinaOS-FCU`, `TinaOS-LBU`, `TinaOS-DirectLink`, `TinaOS-OOS`, or `TinaOS-OSU`).
     * @type {string}
     * @memberof ConsumptionEntry
     */
    service?: string;
    /**
     * The name of the Subregion.
     * @type {string}
     * @memberof ConsumptionEntry
     */
    subregionName?: string;
    /**
     * A description of the consumed resource.
     * @type {string}
     * @memberof ConsumptionEntry
     */
    title?: string;
    /**
     * The end of the time period.
     * @type {string}
     * @memberof ConsumptionEntry
     */
    toDate?: string;
    /**
     * The type of resource, depending on the API call.
     * @type {string}
     * @memberof ConsumptionEntry
     */
    type?: string;
    /**
     * The consumed amount for the resource. The unit depends on the resource type. For more information, see the `Title` element.
     * @type {number}
     * @memberof ConsumptionEntry
     */
    value?: number;
}

export function ConsumptionEntryFromJSON(json: any): ConsumptionEntry {
    return ConsumptionEntryFromJSONTyped(json, false);
}

export function ConsumptionEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsumptionEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'AccountId') ? undefined : json['AccountId'],
        'category': !exists(json, 'Category') ? undefined : json['Category'],
        'fromDate': !exists(json, 'FromDate') ? undefined : json['FromDate'],
        'operation': !exists(json, 'Operation') ? undefined : json['Operation'],
        'payingAccountId': !exists(json, 'PayingAccountId') ? undefined : json['PayingAccountId'],
        'service': !exists(json, 'Service') ? undefined : json['Service'],
        'subregionName': !exists(json, 'SubregionName') ? undefined : json['SubregionName'],
        'title': !exists(json, 'Title') ? undefined : json['Title'],
        'toDate': !exists(json, 'ToDate') ? undefined : json['ToDate'],
        'type': !exists(json, 'Type') ? undefined : json['Type'],
        'value': !exists(json, 'Value') ? undefined : json['Value'],
    };
}

export function ConsumptionEntryToJSON(value?: ConsumptionEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AccountId': value.accountId,
        'Category': value.category,
        'FromDate': value.fromDate,
        'Operation': value.operation,
        'PayingAccountId': value.payingAccountId,
        'Service': value.service,
        'SubregionName': value.subregionName,
        'Title': value.title,
        'ToDate': value.toDate,
        'Type': value.type,
        'Value': value.value,
    };
}

