/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateAccountRequest
 */
export interface CreateAccountRequest {
    /**
     * One or more additional email addresses for the account. These addresses are used for notifications only. If you already have a list of additional emails registered, you cannot add to it, only replace it. To remove all registered additional emails, specify an empty list.
     * @type {Array<string>}
     * @memberof CreateAccountRequest
     */
    additionalEmails?: Array<string>;
    /**
     * The city of the account owner.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    city: string;
    /**
     * The name of the company for the account.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    companyName: string;
    /**
     * The country of the account owner.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    country: string;
    /**
     * The ID of the customer. It must be 8 digits.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    customerId: string;
    /**
     * If true, checks whether you have the required permissions to perform the action.
     * @type {boolean}
     * @memberof CreateAccountRequest
     */
    dryRun?: boolean;
    /**
     * The main email address for the account. This address is used for your credentials and notifications.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    email: string;
    /**
     * The first name of the account owner.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    firstName: string;
    /**
     * The job title of the account owner.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    jobTitle?: string;
    /**
     * The last name of the account owner.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    lastName: string;
    /**
     * The mobile phone number of the account owner.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    mobileNumber?: string;
    /**
     * The landline phone number of the account owner.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    phoneNumber?: string;
    /**
     * The state/province of the account.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    stateProvince?: string;
    /**
     * The value added tax (VAT) number for the account.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    vatNumber?: string;
    /**
     * The ZIP code of the city.
     * @type {string}
     * @memberof CreateAccountRequest
     */
    zipCode: string;
}

export function CreateAccountRequestFromJSON(json: any): CreateAccountRequest {
    return CreateAccountRequestFromJSONTyped(json, false);
}

export function CreateAccountRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAccountRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'additionalEmails': !exists(json, 'AdditionalEmails') ? undefined : json['AdditionalEmails'],
        'city': json['City'],
        'companyName': json['CompanyName'],
        'country': json['Country'],
        'customerId': json['CustomerId'],
        'dryRun': !exists(json, 'DryRun') ? undefined : json['DryRun'],
        'email': json['Email'],
        'firstName': json['FirstName'],
        'jobTitle': !exists(json, 'JobTitle') ? undefined : json['JobTitle'],
        'lastName': json['LastName'],
        'mobileNumber': !exists(json, 'MobileNumber') ? undefined : json['MobileNumber'],
        'phoneNumber': !exists(json, 'PhoneNumber') ? undefined : json['PhoneNumber'],
        'stateProvince': !exists(json, 'StateProvince') ? undefined : json['StateProvince'],
        'vatNumber': !exists(json, 'VatNumber') ? undefined : json['VatNumber'],
        'zipCode': json['ZipCode'],
    };
}

export function CreateAccountRequestToJSON(value?: CreateAccountRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AdditionalEmails': value.additionalEmails,
        'City': value.city,
        'CompanyName': value.companyName,
        'Country': value.country,
        'CustomerId': value.customerId,
        'DryRun': value.dryRun,
        'Email': value.email,
        'FirstName': value.firstName,
        'JobTitle': value.jobTitle,
        'LastName': value.lastName,
        'MobileNumber': value.mobileNumber,
        'PhoneNumber': value.phoneNumber,
        'StateProvince': value.stateProvince,
        'VatNumber': value.vatNumber,
        'ZipCode': value.zipCode,
    };
}

