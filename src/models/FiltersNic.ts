/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. >  > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html).<br /> # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * The version of the OpenAPI document: 1.29.3
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * One or more filters.
 * @export
 * @interface FiltersNic
 */
export interface FiltersNic {
    /**
     * The descriptions of the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    descriptions?: Array<string>;
    /**
     * Whether the source/destination checking is enabled (true) or disabled (false).
     * @type {boolean}
     * @memberof FiltersNic
     */
    isSourceDestCheck?: boolean;
    /**
     * Whether the NICs are deleted when the VMs they are attached to are terminated.
     * @type {boolean}
     * @memberof FiltersNic
     */
    linkNicDeleteOnVmDeletion?: boolean;
    /**
     * The device numbers the NICs are attached to.
     * @type {Array<number>}
     * @memberof FiltersNic
     */
    linkNicDeviceNumbers?: Array<number>;
    /**
     * The attachment IDs of the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkNicLinkNicIds?: Array<string>;
    /**
     * The states of the attachments.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkNicStates?: Array<string>;
    /**
     * The account IDs of the owners of the VMs the NICs are attached to.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkNicVmAccountIds?: Array<string>;
    /**
     * The IDs of the VMs the NICs are attached to.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkNicVmIds?: Array<string>;
    /**
     * The account IDs of the owners of the public IPs associated with the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkPublicIpAccountIds?: Array<string>;
    /**
     * The association IDs returned when the public IPs were associated with the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkPublicIpLinkPublicIpIds?: Array<string>;
    /**
     * The public DNS names associated with the public IPs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkPublicIpPublicDnsNames?: Array<string>;
    /**
     * The allocation IDs returned when the public IPs were allocated to their accounts.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkPublicIpPublicIpIds?: Array<string>;
    /**
     * The public IPs associated with the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    linkPublicIpPublicIps?: Array<string>;
    /**
     * The Media Access Control (MAC) addresses of the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    macAddresses?: Array<string>;
    /**
     * The IDs of the Nets where the NICs are located.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    netIds?: Array<string>;
    /**
     * The IDs of the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    nicIds?: Array<string>;
    /**
     * The private DNS names associated with the primary private IPs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    privateDnsNames?: Array<string>;
    /**
     * The account IDs of the owner of the public IPs associated with the private IPs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    privateIpsLinkPublicIpAccountIds?: Array<string>;
    /**
     * The public IPs associated with the private IPs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    privateIpsLinkPublicIpPublicIps?: Array<string>;
    /**
     * Whether the private IP is the primary IP associated with the NIC.
     * @type {boolean}
     * @memberof FiltersNic
     */
    privateIpsPrimaryIp?: boolean;
    /**
     * The private IPs of the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    privateIpsPrivateIps?: Array<string>;
    /**
     * The IDs of the security groups associated with the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    securityGroupIds?: Array<string>;
    /**
     * The names of the security groups associated with the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    securityGroupNames?: Array<string>;
    /**
     * The states of the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    states?: Array<string>;
    /**
     * The IDs of the Subnets for the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    subnetIds?: Array<string>;
    /**
     * The Subregions where the NICs are located.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    subregionNames?: Array<string>;
    /**
     * The keys of the tags associated with the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    tagKeys?: Array<string>;
    /**
     * The values of the tags associated with the NICs.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    tagValues?: Array<string>;
    /**
     * The key/value combination of the tags associated with the NICs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.
     * @type {Array<string>}
     * @memberof FiltersNic
     */
    tags?: Array<string>;
}

export function FiltersNicFromJSON(json: any): FiltersNic {
    return FiltersNicFromJSONTyped(json, false);
}

export function FiltersNicFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiltersNic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'descriptions': !exists(json, 'Descriptions') ? undefined : json['Descriptions'],
        'isSourceDestCheck': !exists(json, 'IsSourceDestCheck') ? undefined : json['IsSourceDestCheck'],
        'linkNicDeleteOnVmDeletion': !exists(json, 'LinkNicDeleteOnVmDeletion') ? undefined : json['LinkNicDeleteOnVmDeletion'],
        'linkNicDeviceNumbers': !exists(json, 'LinkNicDeviceNumbers') ? undefined : json['LinkNicDeviceNumbers'],
        'linkNicLinkNicIds': !exists(json, 'LinkNicLinkNicIds') ? undefined : json['LinkNicLinkNicIds'],
        'linkNicStates': !exists(json, 'LinkNicStates') ? undefined : json['LinkNicStates'],
        'linkNicVmAccountIds': !exists(json, 'LinkNicVmAccountIds') ? undefined : json['LinkNicVmAccountIds'],
        'linkNicVmIds': !exists(json, 'LinkNicVmIds') ? undefined : json['LinkNicVmIds'],
        'linkPublicIpAccountIds': !exists(json, 'LinkPublicIpAccountIds') ? undefined : json['LinkPublicIpAccountIds'],
        'linkPublicIpLinkPublicIpIds': !exists(json, 'LinkPublicIpLinkPublicIpIds') ? undefined : json['LinkPublicIpLinkPublicIpIds'],
        'linkPublicIpPublicDnsNames': !exists(json, 'LinkPublicIpPublicDnsNames') ? undefined : json['LinkPublicIpPublicDnsNames'],
        'linkPublicIpPublicIpIds': !exists(json, 'LinkPublicIpPublicIpIds') ? undefined : json['LinkPublicIpPublicIpIds'],
        'linkPublicIpPublicIps': !exists(json, 'LinkPublicIpPublicIps') ? undefined : json['LinkPublicIpPublicIps'],
        'macAddresses': !exists(json, 'MacAddresses') ? undefined : json['MacAddresses'],
        'netIds': !exists(json, 'NetIds') ? undefined : json['NetIds'],
        'nicIds': !exists(json, 'NicIds') ? undefined : json['NicIds'],
        'privateDnsNames': !exists(json, 'PrivateDnsNames') ? undefined : json['PrivateDnsNames'],
        'privateIpsLinkPublicIpAccountIds': !exists(json, 'PrivateIpsLinkPublicIpAccountIds') ? undefined : json['PrivateIpsLinkPublicIpAccountIds'],
        'privateIpsLinkPublicIpPublicIps': !exists(json, 'PrivateIpsLinkPublicIpPublicIps') ? undefined : json['PrivateIpsLinkPublicIpPublicIps'],
        'privateIpsPrimaryIp': !exists(json, 'PrivateIpsPrimaryIp') ? undefined : json['PrivateIpsPrimaryIp'],
        'privateIpsPrivateIps': !exists(json, 'PrivateIpsPrivateIps') ? undefined : json['PrivateIpsPrivateIps'],
        'securityGroupIds': !exists(json, 'SecurityGroupIds') ? undefined : json['SecurityGroupIds'],
        'securityGroupNames': !exists(json, 'SecurityGroupNames') ? undefined : json['SecurityGroupNames'],
        'states': !exists(json, 'States') ? undefined : json['States'],
        'subnetIds': !exists(json, 'SubnetIds') ? undefined : json['SubnetIds'],
        'subregionNames': !exists(json, 'SubregionNames') ? undefined : json['SubregionNames'],
        'tagKeys': !exists(json, 'TagKeys') ? undefined : json['TagKeys'],
        'tagValues': !exists(json, 'TagValues') ? undefined : json['TagValues'],
        'tags': !exists(json, 'Tags') ? undefined : json['Tags'],
    };
}

export function FiltersNicToJSON(value?: FiltersNic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Descriptions': value.descriptions,
        'IsSourceDestCheck': value.isSourceDestCheck,
        'LinkNicDeleteOnVmDeletion': value.linkNicDeleteOnVmDeletion,
        'LinkNicDeviceNumbers': value.linkNicDeviceNumbers,
        'LinkNicLinkNicIds': value.linkNicLinkNicIds,
        'LinkNicStates': value.linkNicStates,
        'LinkNicVmAccountIds': value.linkNicVmAccountIds,
        'LinkNicVmIds': value.linkNicVmIds,
        'LinkPublicIpAccountIds': value.linkPublicIpAccountIds,
        'LinkPublicIpLinkPublicIpIds': value.linkPublicIpLinkPublicIpIds,
        'LinkPublicIpPublicDnsNames': value.linkPublicIpPublicDnsNames,
        'LinkPublicIpPublicIpIds': value.linkPublicIpPublicIpIds,
        'LinkPublicIpPublicIps': value.linkPublicIpPublicIps,
        'MacAddresses': value.macAddresses,
        'NetIds': value.netIds,
        'NicIds': value.nicIds,
        'PrivateDnsNames': value.privateDnsNames,
        'PrivateIpsLinkPublicIpAccountIds': value.privateIpsLinkPublicIpAccountIds,
        'PrivateIpsLinkPublicIpPublicIps': value.privateIpsLinkPublicIpPublicIps,
        'PrivateIpsPrimaryIp': value.privateIpsPrimaryIp,
        'PrivateIpsPrivateIps': value.privateIpsPrivateIps,
        'SecurityGroupIds': value.securityGroupIds,
        'SecurityGroupNames': value.securityGroupNames,
        'States': value.states,
        'SubnetIds': value.subnetIds,
        'SubregionNames': value.subregionNames,
        'TagKeys': value.tagKeys,
        'TagValues': value.tagValues,
        'Tags': value.tags,
    };
}

