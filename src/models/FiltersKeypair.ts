/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.22
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * One or more filters.
 * @export
 * @interface FiltersKeypair
 */
export interface FiltersKeypair {
    /**
     * The fingerprints of the keypairs.
     * @type {Array<string>}
     * @memberof FiltersKeypair
     */
    keypairFingerprints?: Array<string>;
    /**
     * The names of the keypairs.
     * @type {Array<string>}
     * @memberof FiltersKeypair
     */
    keypairNames?: Array<string>;
}

export function FiltersKeypairFromJSON(json: any): FiltersKeypair {
    return FiltersKeypairFromJSONTyped(json, false);
}

export function FiltersKeypairFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiltersKeypair {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'keypairFingerprints': !exists(json, 'KeypairFingerprints') ? undefined : json['KeypairFingerprints'],
        'keypairNames': !exists(json, 'KeypairNames') ? undefined : json['KeypairNames'],
    };
}

export function FiltersKeypairToJSON(value?: FiltersKeypair | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'KeypairFingerprints': value.keypairFingerprints,
        'KeypairNames': value.keypairNames,
    };
}

