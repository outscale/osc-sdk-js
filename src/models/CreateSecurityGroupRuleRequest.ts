/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. >  > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html). ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages. ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html).
 *
 * The version of the OpenAPI document: 1.28.5
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SecurityGroupRule,
    SecurityGroupRuleFromJSON,
    SecurityGroupRuleFromJSONTyped,
    SecurityGroupRuleToJSON,
} from './SecurityGroupRule';

/**
 * 
 * @export
 * @interface CreateSecurityGroupRuleRequest
 */
export interface CreateSecurityGroupRuleRequest {
    /**
     * If true, checks whether you have the required permissions to perform the action.
     * @type {boolean}
     * @memberof CreateSecurityGroupRuleRequest
     */
    dryRun?: boolean;
    /**
     * The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only.
     * @type {string}
     * @memberof CreateSecurityGroupRuleRequest
     */
    flow: string;
    /**
     * The beginning of the port range for the TCP and UDP protocols, or an ICMP type number. If you specify this parameter, you cannot specify the `Rules` parameter and its subparameters.
     * @type {number}
     * @memberof CreateSecurityGroupRuleRequest
     */
    fromPortRange?: number;
    /**
     * The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). If you specify this parameter, you cannot specify the `Rules` parameter and its subparameters.
     * @type {string}
     * @memberof CreateSecurityGroupRuleRequest
     */
    ipProtocol?: string;
    /**
     * The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `Rules` parameter and its subparameters.
     * @type {string}
     * @memberof CreateSecurityGroupRuleRequest
     */
    ipRange?: string;
    /**
     * Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `FromPortRange`, `IpProtocol`, `IpRange`, and `ToPortRange`.
     * @type {Array<SecurityGroupRule>}
     * @memberof CreateSecurityGroupRuleRequest
     */
    rules?: Array<SecurityGroupRule>;
    /**
     * The account ID that owns the source or destination security group specified in the `SecurityGroupNameToLink` parameter.
     * @type {string}
     * @memberof CreateSecurityGroupRuleRequest
     */
    securityGroupAccountIdToLink?: string;
    /**
     * The ID of the security group for which you want to create a rule.
     * @type {string}
     * @memberof CreateSecurityGroupRuleRequest
     */
    securityGroupId: string;
    /**
     * The ID of a source or destination security group that you want to link to the security group of the rule.
     * @type {string}
     * @memberof CreateSecurityGroupRuleRequest
     */
    securityGroupNameToLink?: string;
    /**
     * The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `Rules` parameter and its subparameters.
     * @type {number}
     * @memberof CreateSecurityGroupRuleRequest
     */
    toPortRange?: number;
}

export function CreateSecurityGroupRuleRequestFromJSON(json: any): CreateSecurityGroupRuleRequest {
    return CreateSecurityGroupRuleRequestFromJSONTyped(json, false);
}

export function CreateSecurityGroupRuleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSecurityGroupRuleRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dryRun': !exists(json, 'DryRun') ? undefined : json['DryRun'],
        'flow': json['Flow'],
        'fromPortRange': !exists(json, 'FromPortRange') ? undefined : json['FromPortRange'],
        'ipProtocol': !exists(json, 'IpProtocol') ? undefined : json['IpProtocol'],
        'ipRange': !exists(json, 'IpRange') ? undefined : json['IpRange'],
        'rules': !exists(json, 'Rules') ? undefined : ((json['Rules'] as Array<any>).map(SecurityGroupRuleFromJSON)),
        'securityGroupAccountIdToLink': !exists(json, 'SecurityGroupAccountIdToLink') ? undefined : json['SecurityGroupAccountIdToLink'],
        'securityGroupId': json['SecurityGroupId'],
        'securityGroupNameToLink': !exists(json, 'SecurityGroupNameToLink') ? undefined : json['SecurityGroupNameToLink'],
        'toPortRange': !exists(json, 'ToPortRange') ? undefined : json['ToPortRange'],
    };
}

export function CreateSecurityGroupRuleRequestToJSON(value?: CreateSecurityGroupRuleRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'DryRun': value.dryRun,
        'Flow': value.flow,
        'FromPortRange': value.fromPortRange,
        'IpProtocol': value.ipProtocol,
        'IpRange': value.ipRange,
        'Rules': value.rules === undefined ? undefined : ((value.rules as Array<any>).map(SecurityGroupRuleToJSON)),
        'SecurityGroupAccountIdToLink': value.securityGroupAccountIdToLink,
        'SecurityGroupId': value.securityGroupId,
        'SecurityGroupNameToLink': value.securityGroupNameToLink,
        'ToPortRange': value.toPortRange,
    };
}

