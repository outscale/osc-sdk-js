/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * The version of the OpenAPI document: 1.34.3
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BlockDeviceMappingVmCreation,
    BlockDeviceMappingVmCreationFromJSON,
    BlockDeviceMappingVmCreationFromJSONTyped,
    BlockDeviceMappingVmCreationToJSON,
} from './BlockDeviceMappingVmCreation';
import {
    NicForVmCreation,
    NicForVmCreationFromJSON,
    NicForVmCreationFromJSONTyped,
    NicForVmCreationToJSON,
} from './NicForVmCreation';
import {
    Placement,
    PlacementFromJSON,
    PlacementFromJSONTyped,
    PlacementToJSON,
} from './Placement';

/**
 * 
 * @export
 * @interface CreateVmsRequest
 */
export interface CreateVmsRequest {
    /**
     * One or more block device mappings.
     * @type {Array<BlockDeviceMappingVmCreation>}
     * @memberof CreateVmsRequest
     */
    blockDeviceMappings?: Array<BlockDeviceMappingVmCreation>;
    /**
     * By default or if true, the VM is started on creation. If false, the VM is stopped on creation.
     * @type {boolean}
     * @memberof CreateVmsRequest
     */
    bootOnCreation?: boolean;
    /**
     * This parameter is not available. It is present in our API for the sake of historical compatibility with AWS.
     * @type {boolean}
     * @memberof CreateVmsRequest
     */
    bsuOptimized?: boolean;
    /**
     * A unique identifier which enables you to manage the idempotency.
     * @type {string}
     * @memberof CreateVmsRequest
     */
    clientToken?: string;
    /**
     * If true, you cannot delete the VM unless you change this parameter back to false.
     * @type {boolean}
     * @memberof CreateVmsRequest
     */
    deletionProtection?: boolean;
    /**
     * If true, checks whether you have the required permissions to perform the action.
     * @type {boolean}
     * @memberof CreateVmsRequest
     */
    dryRun?: boolean;
    /**
     * The ID of the OMI used to create the VM. You can find the list of OMIs by calling the [ReadImages](#readimages) method.
     * @type {string}
     * @memberof CreateVmsRequest
     */
    imageId: string;
    /**
     * The name of the keypair.
     * @type {string}
     * @memberof CreateVmsRequest
     */
    keypairName?: string;
    /**
     * The maximum number of VMs you want to create. If all the VMs cannot be created, the largest possible number of VMs above MinVmsCount is created.
     * @type {number}
     * @memberof CreateVmsRequest
     */
    maxVmsCount?: number;
    /**
     * The minimum number of VMs you want to create. If this number of VMs cannot be created, no VMs are created.
     * @type {number}
     * @memberof CreateVmsRequest
     */
    minVmsCount?: number;
    /**
     * (dedicated tenancy only) If true, nested virtualization is enabled. If false, it is disabled.
     * @type {boolean}
     * @memberof CreateVmsRequest
     */
    nestedVirtualization?: boolean;
    /**
     * One or more NICs. If you specify this parameter, you must not specify the `SubnetId` and `SubregionName` parameters. You also must define one NIC as the primary network interface of the VM with `0` as its device number.
     * @type {Array<NicForVmCreation>}
     * @memberof CreateVmsRequest
     */
    nics?: Array<NicForVmCreation>;
    /**
     * The performance of the VM (`medium` \| `high` \|  `highest`). By default, `high`. This parameter is ignored if you specify a performance flag directly in the `VmType` parameter.
     * @type {string}
     * @memberof CreateVmsRequest
     */
    performance?: CreateVmsRequestPerformanceEnum;
    /**
     * 
     * @type {Placement}
     * @memberof CreateVmsRequest
     */
    placement?: Placement;
    /**
     * One or more private IPs of the VM.
     * @type {Array<string>}
     * @memberof CreateVmsRequest
     */
    privateIps?: Array<string>;
    /**
     * One or more IDs of security group for the VMs.
     * @type {Array<string>}
     * @memberof CreateVmsRequest
     */
    securityGroupIds?: Array<string>;
    /**
     * One or more names of security groups for the VMs.
     * @type {Array<string>}
     * @memberof CreateVmsRequest
     */
    securityGroups?: Array<string>;
    /**
     * The ID of the Subnet in which you want to create the VM. If you specify this parameter, you must not specify the `Nics` parameter.
     * @type {string}
     * @memberof CreateVmsRequest
     */
    subnetId?: string;
    /**
     * Data or script used to add a specific configuration to the VM. It must be Base64-encoded and is limited to 500 kibibytes (KiB). For more information about user data, see [Configuring a VM with User Data and OUTSCALE Tags](https://docs.outscale.com/en/userguide/Configuring-a-VM-with-User-Data-and-OUTSCALE-Tags.html).
     * @type {string}
     * @memberof CreateVmsRequest
     */
    userData?: string;
    /**
     * The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated.
     * @type {string}
     * @memberof CreateVmsRequest
     */
    vmInitiatedShutdownBehavior?: string;
    /**
     * The type of VM. You can specify a TINA type (in the `tinavW.cXrYpZ` or `tinavW.cXrY` format), or an AWS type (for example, `t2.small`, which is the default value).<br />
     * If you specify an AWS type, it is converted in the background to its corresponding TINA type, but the AWS type is still returned. If the specified or converted TINA type includes a performance flag, this performance flag is applied regardless of the value you may have provided in the `Performance` parameter. For more information, see [VM Types](https://docs.outscale.com/en/userguide/VM-Types.html).
     * @type {string}
     * @memberof CreateVmsRequest
     */
    vmType?: string;
}


/**
 * @export
 */
export const CreateVmsRequestPerformanceEnum = {
    Medium: 'medium',
    High: 'high',
    Highest: 'highest'
} as const;
export type CreateVmsRequestPerformanceEnum = typeof CreateVmsRequestPerformanceEnum[keyof typeof CreateVmsRequestPerformanceEnum];


export function CreateVmsRequestFromJSON(json: any): CreateVmsRequest {
    return CreateVmsRequestFromJSONTyped(json, false);
}

export function CreateVmsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateVmsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockDeviceMappings': !exists(json, 'BlockDeviceMappings') ? undefined : ((json['BlockDeviceMappings'] as Array<any>).map(BlockDeviceMappingVmCreationFromJSON)),
        'bootOnCreation': !exists(json, 'BootOnCreation') ? undefined : json['BootOnCreation'],
        'bsuOptimized': !exists(json, 'BsuOptimized') ? undefined : json['BsuOptimized'],
        'clientToken': !exists(json, 'ClientToken') ? undefined : json['ClientToken'],
        'deletionProtection': !exists(json, 'DeletionProtection') ? undefined : json['DeletionProtection'],
        'dryRun': !exists(json, 'DryRun') ? undefined : json['DryRun'],
        'imageId': json['ImageId'],
        'keypairName': !exists(json, 'KeypairName') ? undefined : json['KeypairName'],
        'maxVmsCount': !exists(json, 'MaxVmsCount') ? undefined : json['MaxVmsCount'],
        'minVmsCount': !exists(json, 'MinVmsCount') ? undefined : json['MinVmsCount'],
        'nestedVirtualization': !exists(json, 'NestedVirtualization') ? undefined : json['NestedVirtualization'],
        'nics': !exists(json, 'Nics') ? undefined : ((json['Nics'] as Array<any>).map(NicForVmCreationFromJSON)),
        'performance': !exists(json, 'Performance') ? undefined : json['Performance'],
        'placement': !exists(json, 'Placement') ? undefined : PlacementFromJSON(json['Placement']),
        'privateIps': !exists(json, 'PrivateIps') ? undefined : json['PrivateIps'],
        'securityGroupIds': !exists(json, 'SecurityGroupIds') ? undefined : json['SecurityGroupIds'],
        'securityGroups': !exists(json, 'SecurityGroups') ? undefined : json['SecurityGroups'],
        'subnetId': !exists(json, 'SubnetId') ? undefined : json['SubnetId'],
        'userData': !exists(json, 'UserData') ? undefined : json['UserData'],
        'vmInitiatedShutdownBehavior': !exists(json, 'VmInitiatedShutdownBehavior') ? undefined : json['VmInitiatedShutdownBehavior'],
        'vmType': !exists(json, 'VmType') ? undefined : json['VmType'],
    };
}

export function CreateVmsRequestToJSON(value?: CreateVmsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BlockDeviceMappings': value.blockDeviceMappings === undefined ? undefined : ((value.blockDeviceMappings as Array<any>).map(BlockDeviceMappingVmCreationToJSON)),
        'BootOnCreation': value.bootOnCreation,
        'BsuOptimized': value.bsuOptimized,
        'ClientToken': value.clientToken,
        'DeletionProtection': value.deletionProtection,
        'DryRun': value.dryRun,
        'ImageId': value.imageId,
        'KeypairName': value.keypairName,
        'MaxVmsCount': value.maxVmsCount,
        'MinVmsCount': value.minVmsCount,
        'NestedVirtualization': value.nestedVirtualization,
        'Nics': value.nics === undefined ? undefined : ((value.nics as Array<any>).map(NicForVmCreationToJSON)),
        'Performance': value.performance,
        'Placement': PlacementToJSON(value.placement),
        'PrivateIps': value.privateIps,
        'SecurityGroupIds': value.securityGroupIds,
        'SecurityGroups': value.securityGroups,
        'SubnetId': value.subnetId,
        'UserData': value.userData,
        'VmInitiatedShutdownBehavior': value.vmInitiatedShutdownBehavior,
        'VmType': value.vmType,
    };
}

