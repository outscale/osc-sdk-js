/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of this API is also available for download: <button>[GitHub repository](https://github.com/outscale/osc-api)</button><br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * The version of the OpenAPI document: 1.36.3
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreatePublicIpRequest,
    CreatePublicIpRequestFromJSON,
    CreatePublicIpRequestToJSON,
    CreatePublicIpResponse,
    CreatePublicIpResponseFromJSON,
    CreatePublicIpResponseToJSON,
    DeletePublicIpRequest,
    DeletePublicIpRequestFromJSON,
    DeletePublicIpRequestToJSON,
    DeletePublicIpResponse,
    DeletePublicIpResponseFromJSON,
    DeletePublicIpResponseToJSON,
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    LinkPublicIpRequest,
    LinkPublicIpRequestFromJSON,
    LinkPublicIpRequestToJSON,
    LinkPublicIpResponse,
    LinkPublicIpResponseFromJSON,
    LinkPublicIpResponseToJSON,
    ReadPublicIpRangesRequest,
    ReadPublicIpRangesRequestFromJSON,
    ReadPublicIpRangesRequestToJSON,
    ReadPublicIpRangesResponse,
    ReadPublicIpRangesResponseFromJSON,
    ReadPublicIpRangesResponseToJSON,
    ReadPublicIpsRequest,
    ReadPublicIpsRequestFromJSON,
    ReadPublicIpsRequestToJSON,
    ReadPublicIpsResponse,
    ReadPublicIpsResponseFromJSON,
    ReadPublicIpsResponseToJSON,
    UnlinkPublicIpRequest,
    UnlinkPublicIpRequestFromJSON,
    UnlinkPublicIpRequestToJSON,
    UnlinkPublicIpResponse,
    UnlinkPublicIpResponseFromJSON,
    UnlinkPublicIpResponseToJSON,
} from '../models';

export interface CreatePublicIpOperationRequest {
    createPublicIpRequest?: CreatePublicIpRequest;
}

export interface DeletePublicIpOperationRequest {
    deletePublicIpRequest?: DeletePublicIpRequest;
}

export interface LinkPublicIpOperationRequest {
    linkPublicIpRequest?: LinkPublicIpRequest;
}

export interface ReadPublicIpRangesOperationRequest {
    readPublicIpRangesRequest?: ReadPublicIpRangesRequest;
}

export interface ReadPublicIpsOperationRequest {
    readPublicIpsRequest?: ReadPublicIpsRequest;
}

export interface UnlinkPublicIpOperationRequest {
    unlinkPublicIpRequest?: UnlinkPublicIpRequest;
}

/**
 * PublicIpApi - interface
 * 
 * @export
 * @interface PublicIpApiInterface
 */
export interface PublicIpApiInterface {
    /**
     * Acquires a public IP for your account.<br /> A public IP is a static IP designed for dynamic Cloud computing. It can be associated with a virtual machine (VM) in the public Cloud or in a Net, a network interface card (NIC), a NAT service.<br /><br /> For more information, see [About Public IPs](https://docs.outscale.com/en/userguide/About-Public-IPs.html).
     * @param {CreatePublicIpRequest} [createPublicIpRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicIpApiInterface
     */
    createPublicIpRaw(requestParameters: CreatePublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreatePublicIpResponse>>;

    /**
     * Acquires a public IP for your account.<br /> A public IP is a static IP designed for dynamic Cloud computing. It can be associated with a virtual machine (VM) in the public Cloud or in a Net, a network interface card (NIC), a NAT service.<br /><br /> For more information, see [About Public IPs](https://docs.outscale.com/en/userguide/About-Public-IPs.html).
     */
    createPublicIp(requestParameters: CreatePublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreatePublicIpResponse>;

    /**
     * Releases a public IP.<br /> You can release a public IP associated with your account. This address is released in the public IP pool and can be used by someone else. Before releasing a public IP, ensure you updated all your resources communicating with this address.
     * @param {DeletePublicIpRequest} [deletePublicIpRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicIpApiInterface
     */
    deletePublicIpRaw(requestParameters: DeletePublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeletePublicIpResponse>>;

    /**
     * Releases a public IP.<br /> You can release a public IP associated with your account. This address is released in the public IP pool and can be used by someone else. Before releasing a public IP, ensure you updated all your resources communicating with this address.
     */
    deletePublicIp(requestParameters: DeletePublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeletePublicIpResponse>;

    /**
     * Associates a public IP with a virtual machine (VM) or a network interface card (NIC), in the public Cloud or in a Net. You can associate a public IP with only one VM or network interface at a time.<br /> To associate a public IP in a Net, ensure that the Net has an internet service attached. For more information, see the [LinkInternetService](#linkinternetservice) method.<br /> By default, the public IP is disassociated every time you stop and start the VM. For a persistent association, you can add the `osc.fcu.eip.auto-attach` tag to the VM with the public IP as value. For more information, see the [CreateTags](#createtags) method.<br /><br />  **[IMPORTANT]**<br /> You can associate a public IP with a network address translation (NAT) service only when creating the NAT service. To modify its public IP, you need to delete the NAT service and re-create it with the new public IP. For more information, see the [CreateNatService](#createnatservice) method.
     * @param {LinkPublicIpRequest} [linkPublicIpRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicIpApiInterface
     */
    linkPublicIpRaw(requestParameters: LinkPublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<LinkPublicIpResponse>>;

    /**
     * Associates a public IP with a virtual machine (VM) or a network interface card (NIC), in the public Cloud or in a Net. You can associate a public IP with only one VM or network interface at a time.<br /> To associate a public IP in a Net, ensure that the Net has an internet service attached. For more information, see the [LinkInternetService](#linkinternetservice) method.<br /> By default, the public IP is disassociated every time you stop and start the VM. For a persistent association, you can add the `osc.fcu.eip.auto-attach` tag to the VM with the public IP as value. For more information, see the [CreateTags](#createtags) method.<br /><br />  **[IMPORTANT]**<br /> You can associate a public IP with a network address translation (NAT) service only when creating the NAT service. To modify its public IP, you need to delete the NAT service and re-create it with the new public IP. For more information, see the [CreateNatService](#createnatservice) method.
     */
    linkPublicIp(requestParameters: LinkPublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<LinkPublicIpResponse>;

    /**
     * Gets the public IPv4 addresses in CIDR notation for the Region specified in the endpoint of the request. For more information, see [About Regions and Subregions](https://docs.outscale.com/en/userguide/About-Regions-and-Subregions.html).
     * @param {ReadPublicIpRangesRequest} [readPublicIpRangesRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicIpApiInterface
     */
    readPublicIpRangesRaw(requestParameters: ReadPublicIpRangesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadPublicIpRangesResponse>>;

    /**
     * Gets the public IPv4 addresses in CIDR notation for the Region specified in the endpoint of the request. For more information, see [About Regions and Subregions](https://docs.outscale.com/en/userguide/About-Regions-and-Subregions.html).
     */
    readPublicIpRanges(requestParameters: ReadPublicIpRangesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadPublicIpRangesResponse>;

    /**
     * Lists one or more public IPs allocated to your account.<br /> By default, this action returns information about all your public IPs: available or associated with a virtual machine (VM), a network interface card (NIC) or a NAT service.
     * @param {ReadPublicIpsRequest} [readPublicIpsRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicIpApiInterface
     */
    readPublicIpsRaw(requestParameters: ReadPublicIpsOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadPublicIpsResponse>>;

    /**
     * Lists one or more public IPs allocated to your account.<br /> By default, this action returns information about all your public IPs: available or associated with a virtual machine (VM), a network interface card (NIC) or a NAT service.
     */
    readPublicIps(requestParameters: ReadPublicIpsOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadPublicIpsResponse>;

    /**
     * Disassociates a public IP from the virtual machine (VM) or network interface card (NIC) it is associated with.<br /><br />  **[IMPORTANT]**<br /> To disassociate the public IP from a NAT service, you need to delete the NAT service. For more information, see the [DeleteNatService](#deletenatservice) method.
     * @param {UnlinkPublicIpRequest} [unlinkPublicIpRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicIpApiInterface
     */
    unlinkPublicIpRaw(requestParameters: UnlinkPublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UnlinkPublicIpResponse>>;

    /**
     * Disassociates a public IP from the virtual machine (VM) or network interface card (NIC) it is associated with.<br /><br />  **[IMPORTANT]**<br /> To disassociate the public IP from a NAT service, you need to delete the NAT service. For more information, see the [DeleteNatService](#deletenatservice) method.
     */
    unlinkPublicIp(requestParameters: UnlinkPublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UnlinkPublicIpResponse>;

}

/**
 * 
 */
export class PublicIpApi extends runtime.BaseAPI implements PublicIpApiInterface {

    /**
     * Acquires a public IP for your account.<br /> A public IP is a static IP designed for dynamic Cloud computing. It can be associated with a virtual machine (VM) in the public Cloud or in a Net, a network interface card (NIC), a NAT service.<br /><br /> For more information, see [About Public IPs](https://docs.outscale.com/en/userguide/About-Public-IPs.html).
     */
    async createPublicIpRaw(requestParameters: CreatePublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreatePublicIpResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = CreatePublicIpRequestToJSON(requestParameters.createPublicIpRequest);

        const request: runtime.RequestOpts = {
            path: `/CreatePublicIp`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreatePublicIpResponseFromJSON(jsonValue));
    }

    /**
     * Acquires a public IP for your account.<br /> A public IP is a static IP designed for dynamic Cloud computing. It can be associated with a virtual machine (VM) in the public Cloud or in a Net, a network interface card (NIC), a NAT service.<br /><br /> For more information, see [About Public IPs](https://docs.outscale.com/en/userguide/About-Public-IPs.html).
     */
    async createPublicIp(requestParameters: CreatePublicIpOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreatePublicIpResponse> {
        const response = await this.createPublicIpRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Releases a public IP.<br /> You can release a public IP associated with your account. This address is released in the public IP pool and can be used by someone else. Before releasing a public IP, ensure you updated all your resources communicating with this address.
     */
    async deletePublicIpRaw(requestParameters: DeletePublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeletePublicIpResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = DeletePublicIpRequestToJSON(requestParameters.deletePublicIpRequest);

        const request: runtime.RequestOpts = {
            path: `/DeletePublicIp`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DeletePublicIpResponseFromJSON(jsonValue));
    }

    /**
     * Releases a public IP.<br /> You can release a public IP associated with your account. This address is released in the public IP pool and can be used by someone else. Before releasing a public IP, ensure you updated all your resources communicating with this address.
     */
    async deletePublicIp(requestParameters: DeletePublicIpOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeletePublicIpResponse> {
        const response = await this.deletePublicIpRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Associates a public IP with a virtual machine (VM) or a network interface card (NIC), in the public Cloud or in a Net. You can associate a public IP with only one VM or network interface at a time.<br /> To associate a public IP in a Net, ensure that the Net has an internet service attached. For more information, see the [LinkInternetService](#linkinternetservice) method.<br /> By default, the public IP is disassociated every time you stop and start the VM. For a persistent association, you can add the `osc.fcu.eip.auto-attach` tag to the VM with the public IP as value. For more information, see the [CreateTags](#createtags) method.<br /><br />  **[IMPORTANT]**<br /> You can associate a public IP with a network address translation (NAT) service only when creating the NAT service. To modify its public IP, you need to delete the NAT service and re-create it with the new public IP. For more information, see the [CreateNatService](#createnatservice) method.
     */
    async linkPublicIpRaw(requestParameters: LinkPublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<LinkPublicIpResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = LinkPublicIpRequestToJSON(requestParameters.linkPublicIpRequest);

        const request: runtime.RequestOpts = {
            path: `/LinkPublicIp`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LinkPublicIpResponseFromJSON(jsonValue));
    }

    /**
     * Associates a public IP with a virtual machine (VM) or a network interface card (NIC), in the public Cloud or in a Net. You can associate a public IP with only one VM or network interface at a time.<br /> To associate a public IP in a Net, ensure that the Net has an internet service attached. For more information, see the [LinkInternetService](#linkinternetservice) method.<br /> By default, the public IP is disassociated every time you stop and start the VM. For a persistent association, you can add the `osc.fcu.eip.auto-attach` tag to the VM with the public IP as value. For more information, see the [CreateTags](#createtags) method.<br /><br />  **[IMPORTANT]**<br /> You can associate a public IP with a network address translation (NAT) service only when creating the NAT service. To modify its public IP, you need to delete the NAT service and re-create it with the new public IP. For more information, see the [CreateNatService](#createnatservice) method.
     */
    async linkPublicIp(requestParameters: LinkPublicIpOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<LinkPublicIpResponse> {
        const response = await this.linkPublicIpRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Gets the public IPv4 addresses in CIDR notation for the Region specified in the endpoint of the request. For more information, see [About Regions and Subregions](https://docs.outscale.com/en/userguide/About-Regions-and-Subregions.html).
     */
    async readPublicIpRangesRaw(requestParameters: ReadPublicIpRangesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadPublicIpRangesResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';



        const body: any = ReadPublicIpRangesRequestToJSON(requestParameters.readPublicIpRangesRequest);

        const request: runtime.RequestOpts = {
            path: `/ReadPublicIpRanges`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadPublicIpRangesResponseFromJSON(jsonValue));
    }

    /**
     * Gets the public IPv4 addresses in CIDR notation for the Region specified in the endpoint of the request. For more information, see [About Regions and Subregions](https://docs.outscale.com/en/userguide/About-Regions-and-Subregions.html).
     */
    async readPublicIpRanges(requestParameters: ReadPublicIpRangesOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadPublicIpRangesResponse> {
        const response = await this.readPublicIpRangesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Lists one or more public IPs allocated to your account.<br /> By default, this action returns information about all your public IPs: available or associated with a virtual machine (VM), a network interface card (NIC) or a NAT service.
     */
    async readPublicIpsRaw(requestParameters: ReadPublicIpsOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadPublicIpsResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = ReadPublicIpsRequestToJSON(requestParameters.readPublicIpsRequest);

        const request: runtime.RequestOpts = {
            path: `/ReadPublicIps`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadPublicIpsResponseFromJSON(jsonValue));
    }

    /**
     * Lists one or more public IPs allocated to your account.<br /> By default, this action returns information about all your public IPs: available or associated with a virtual machine (VM), a network interface card (NIC) or a NAT service.
     */
    async readPublicIps(requestParameters: ReadPublicIpsOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadPublicIpsResponse> {
        const response = await this.readPublicIpsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Disassociates a public IP from the virtual machine (VM) or network interface card (NIC) it is associated with.<br /><br />  **[IMPORTANT]**<br /> To disassociate the public IP from a NAT service, you need to delete the NAT service. For more information, see the [DeleteNatService](#deletenatservice) method.
     */
    async unlinkPublicIpRaw(requestParameters: UnlinkPublicIpOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UnlinkPublicIpResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = UnlinkPublicIpRequestToJSON(requestParameters.unlinkPublicIpRequest);

        const request: runtime.RequestOpts = {
            path: `/UnlinkPublicIp`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UnlinkPublicIpResponseFromJSON(jsonValue));
    }

    /**
     * Disassociates a public IP from the virtual machine (VM) or network interface card (NIC) it is associated with.<br /><br />  **[IMPORTANT]**<br /> To disassociate the public IP from a NAT service, you need to delete the NAT service. For more information, see the [DeleteNatService](#deletenatservice) method.
     */
    async unlinkPublicIp(requestParameters: UnlinkPublicIpOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UnlinkPublicIpResponse> {
        const response = await this.unlinkPublicIpRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
