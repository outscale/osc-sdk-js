/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.25
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateDirectLinkRequest,
    CreateDirectLinkRequestFromJSON,
    CreateDirectLinkRequestToJSON,
    CreateDirectLinkResponse,
    CreateDirectLinkResponseFromJSON,
    CreateDirectLinkResponseToJSON,
    DeleteDirectLinkRequest,
    DeleteDirectLinkRequestFromJSON,
    DeleteDirectLinkRequestToJSON,
    DeleteDirectLinkResponse,
    DeleteDirectLinkResponseFromJSON,
    DeleteDirectLinkResponseToJSON,
    ReadDirectLinksRequest,
    ReadDirectLinksRequestFromJSON,
    ReadDirectLinksRequestToJSON,
    ReadDirectLinksResponse,
    ReadDirectLinksResponseFromJSON,
    ReadDirectLinksResponseToJSON,
} from '../models';

export interface CreateDirectLinkOperationRequest {
    createDirectLinkRequest?: CreateDirectLinkRequest;
}

export interface DeleteDirectLinkOperationRequest {
    deleteDirectLinkRequest?: DeleteDirectLinkRequest;
}

export interface ReadDirectLinksOperationRequest {
    readDirectLinksRequest?: ReadDirectLinksRequest;
}

/**
 * DirectLinkApi - interface
 * 
 * @export
 * @interface DirectLinkApiInterface
 */
export interface DirectLinkApiInterface {
    /**
     * 
     * @param {CreateDirectLinkRequest} [createDirectLinkRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectLinkApiInterface
     */
    createDirectLinkRaw(requestParameters: CreateDirectLinkOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateDirectLinkResponse>>;

    /**
     */
    createDirectLink(requestParameters: CreateDirectLinkOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateDirectLinkResponse>;

    /**
     * 
     * @param {DeleteDirectLinkRequest} [deleteDirectLinkRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectLinkApiInterface
     */
    deleteDirectLinkRaw(requestParameters: DeleteDirectLinkOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteDirectLinkResponse>>;

    /**
     */
    deleteDirectLink(requestParameters: DeleteDirectLinkOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteDirectLinkResponse>;

    /**
     * 
     * @param {ReadDirectLinksRequest} [readDirectLinksRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectLinkApiInterface
     */
    readDirectLinksRaw(requestParameters: ReadDirectLinksOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadDirectLinksResponse>>;

    /**
     */
    readDirectLinks(requestParameters: ReadDirectLinksOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadDirectLinksResponse>;

}

/**
 * 
 */
export class DirectLinkApi extends runtime.BaseAPI implements DirectLinkApiInterface {

    /**
     */
    async createDirectLinkRaw(requestParameters: CreateDirectLinkOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateDirectLinkResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = CreateDirectLinkRequestToJSON(requestParameters.createDirectLinkRequest);

        const request: runtime.RequestOpts = {
            path: `/CreateDirectLink`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateDirectLinkResponseFromJSON(jsonValue));
    }

    /**
     */
    async createDirectLink(requestParameters: CreateDirectLinkOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateDirectLinkResponse> {
        const response = await this.createDirectLinkRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deleteDirectLinkRaw(requestParameters: DeleteDirectLinkOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteDirectLinkResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = DeleteDirectLinkRequestToJSON(requestParameters.deleteDirectLinkRequest);

        const request: runtime.RequestOpts = {
            path: `/DeleteDirectLink`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteDirectLinkResponseFromJSON(jsonValue));
    }

    /**
     */
    async deleteDirectLink(requestParameters: DeleteDirectLinkOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteDirectLinkResponse> {
        const response = await this.deleteDirectLinkRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async readDirectLinksRaw(requestParameters: ReadDirectLinksOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadDirectLinksResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = ReadDirectLinksRequestToJSON(requestParameters.readDirectLinksRequest);

        const request: runtime.RequestOpts = {
            path: `/ReadDirectLinks`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadDirectLinksResponseFromJSON(jsonValue));
    }

    /**
     */
    async readDirectLinks(requestParameters: ReadDirectLinksOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadDirectLinksResponse> {
        const response = await this.readDirectLinksRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
