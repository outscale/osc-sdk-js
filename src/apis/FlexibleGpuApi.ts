/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateFlexibleGpuRequest,
    CreateFlexibleGpuRequestFromJSON,
    CreateFlexibleGpuRequestToJSON,
    CreateFlexibleGpuResponse,
    CreateFlexibleGpuResponseFromJSON,
    CreateFlexibleGpuResponseToJSON,
    DeleteFlexibleGpuRequest,
    DeleteFlexibleGpuRequestFromJSON,
    DeleteFlexibleGpuRequestToJSON,
    DeleteFlexibleGpuResponse,
    DeleteFlexibleGpuResponseFromJSON,
    DeleteFlexibleGpuResponseToJSON,
    LinkFlexibleGpuRequest,
    LinkFlexibleGpuRequestFromJSON,
    LinkFlexibleGpuRequestToJSON,
    LinkFlexibleGpuResponse,
    LinkFlexibleGpuResponseFromJSON,
    LinkFlexibleGpuResponseToJSON,
    ReadFlexibleGpuCatalogRequest,
    ReadFlexibleGpuCatalogRequestFromJSON,
    ReadFlexibleGpuCatalogRequestToJSON,
    ReadFlexibleGpuCatalogResponse,
    ReadFlexibleGpuCatalogResponseFromJSON,
    ReadFlexibleGpuCatalogResponseToJSON,
    ReadFlexibleGpusRequest,
    ReadFlexibleGpusRequestFromJSON,
    ReadFlexibleGpusRequestToJSON,
    ReadFlexibleGpusResponse,
    ReadFlexibleGpusResponseFromJSON,
    ReadFlexibleGpusResponseToJSON,
    UnlinkFlexibleGpuRequest,
    UnlinkFlexibleGpuRequestFromJSON,
    UnlinkFlexibleGpuRequestToJSON,
    UnlinkFlexibleGpuResponse,
    UnlinkFlexibleGpuResponseFromJSON,
    UnlinkFlexibleGpuResponseToJSON,
    UpdateFlexibleGpuRequest,
    UpdateFlexibleGpuRequestFromJSON,
    UpdateFlexibleGpuRequestToJSON,
    UpdateFlexibleGpuResponse,
    UpdateFlexibleGpuResponseFromJSON,
    UpdateFlexibleGpuResponseToJSON,
} from '../models';

export interface CreateFlexibleGpuOperationRequest {
    createFlexibleGpuRequest?: CreateFlexibleGpuRequest;
}

export interface DeleteFlexibleGpuOperationRequest {
    deleteFlexibleGpuRequest?: DeleteFlexibleGpuRequest;
}

export interface LinkFlexibleGpuOperationRequest {
    linkFlexibleGpuRequest?: LinkFlexibleGpuRequest;
}

export interface ReadFlexibleGpuCatalogOperationRequest {
    readFlexibleGpuCatalogRequest?: ReadFlexibleGpuCatalogRequest;
}

export interface ReadFlexibleGpusOperationRequest {
    readFlexibleGpusRequest?: ReadFlexibleGpusRequest;
}

export interface UnlinkFlexibleGpuOperationRequest {
    unlinkFlexibleGpuRequest?: UnlinkFlexibleGpuRequest;
}

export interface UpdateFlexibleGpuOperationRequest {
    updateFlexibleGpuRequest?: UpdateFlexibleGpuRequest;
}

/**
 * FlexibleGpuApi - interface
 * 
 * @export
 * @interface FlexibleGpuApiInterface
 */
export interface FlexibleGpuApiInterface {
    /**
     * 
     * @param {CreateFlexibleGpuRequest} [createFlexibleGpuRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlexibleGpuApiInterface
     */
    createFlexibleGpuRaw(requestParameters: CreateFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateFlexibleGpuResponse>>;

    /**
     */
    createFlexibleGpu(requestParameters: CreateFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateFlexibleGpuResponse>;

    /**
     * 
     * @param {DeleteFlexibleGpuRequest} [deleteFlexibleGpuRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlexibleGpuApiInterface
     */
    deleteFlexibleGpuRaw(requestParameters: DeleteFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteFlexibleGpuResponse>>;

    /**
     */
    deleteFlexibleGpu(requestParameters: DeleteFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteFlexibleGpuResponse>;

    /**
     * 
     * @param {LinkFlexibleGpuRequest} [linkFlexibleGpuRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlexibleGpuApiInterface
     */
    linkFlexibleGpuRaw(requestParameters: LinkFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<LinkFlexibleGpuResponse>>;

    /**
     */
    linkFlexibleGpu(requestParameters: LinkFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<LinkFlexibleGpuResponse>;

    /**
     * 
     * @param {ReadFlexibleGpuCatalogRequest} [readFlexibleGpuCatalogRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlexibleGpuApiInterface
     */
    readFlexibleGpuCatalogRaw(requestParameters: ReadFlexibleGpuCatalogOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadFlexibleGpuCatalogResponse>>;

    /**
     */
    readFlexibleGpuCatalog(requestParameters: ReadFlexibleGpuCatalogOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadFlexibleGpuCatalogResponse>;

    /**
     * 
     * @param {ReadFlexibleGpusRequest} [readFlexibleGpusRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlexibleGpuApiInterface
     */
    readFlexibleGpusRaw(requestParameters: ReadFlexibleGpusOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadFlexibleGpusResponse>>;

    /**
     */
    readFlexibleGpus(requestParameters: ReadFlexibleGpusOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadFlexibleGpusResponse>;

    /**
     * 
     * @param {UnlinkFlexibleGpuRequest} [unlinkFlexibleGpuRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlexibleGpuApiInterface
     */
    unlinkFlexibleGpuRaw(requestParameters: UnlinkFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UnlinkFlexibleGpuResponse>>;

    /**
     */
    unlinkFlexibleGpu(requestParameters: UnlinkFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UnlinkFlexibleGpuResponse>;

    /**
     * 
     * @param {UpdateFlexibleGpuRequest} [updateFlexibleGpuRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlexibleGpuApiInterface
     */
    updateFlexibleGpuRaw(requestParameters: UpdateFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UpdateFlexibleGpuResponse>>;

    /**
     */
    updateFlexibleGpu(requestParameters: UpdateFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UpdateFlexibleGpuResponse>;

}

/**
 * 
 */
export class FlexibleGpuApi extends runtime.BaseAPI implements FlexibleGpuApiInterface {

    /**
     */
    async createFlexibleGpuRaw(requestParameters: CreateFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateFlexibleGpuResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = CreateFlexibleGpuRequestToJSON(requestParameters.createFlexibleGpuRequest);

        const request: runtime.RequestOpts = {
            path: `/CreateFlexibleGpu`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateFlexibleGpuResponseFromJSON(jsonValue));
    }

    /**
     */
    async createFlexibleGpu(requestParameters: CreateFlexibleGpuOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateFlexibleGpuResponse> {
        const response = await this.createFlexibleGpuRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deleteFlexibleGpuRaw(requestParameters: DeleteFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteFlexibleGpuResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = DeleteFlexibleGpuRequestToJSON(requestParameters.deleteFlexibleGpuRequest);

        const request: runtime.RequestOpts = {
            path: `/DeleteFlexibleGpu`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteFlexibleGpuResponseFromJSON(jsonValue));
    }

    /**
     */
    async deleteFlexibleGpu(requestParameters: DeleteFlexibleGpuOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteFlexibleGpuResponse> {
        const response = await this.deleteFlexibleGpuRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async linkFlexibleGpuRaw(requestParameters: LinkFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<LinkFlexibleGpuResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = LinkFlexibleGpuRequestToJSON(requestParameters.linkFlexibleGpuRequest);

        const request: runtime.RequestOpts = {
            path: `/LinkFlexibleGpu`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LinkFlexibleGpuResponseFromJSON(jsonValue));
    }

    /**
     */
    async linkFlexibleGpu(requestParameters: LinkFlexibleGpuOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<LinkFlexibleGpuResponse> {
        const response = await this.linkFlexibleGpuRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async readFlexibleGpuCatalogRaw(requestParameters: ReadFlexibleGpuCatalogOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadFlexibleGpuCatalogResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';



        const body: any = ReadFlexibleGpuCatalogRequestToJSON(requestParameters.readFlexibleGpuCatalogRequest);

        const request: runtime.RequestOpts = {
            path: `/ReadFlexibleGpuCatalog`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadFlexibleGpuCatalogResponseFromJSON(jsonValue));
    }

    /**
     */
    async readFlexibleGpuCatalog(requestParameters: ReadFlexibleGpuCatalogOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadFlexibleGpuCatalogResponse> {
        const response = await this.readFlexibleGpuCatalogRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async readFlexibleGpusRaw(requestParameters: ReadFlexibleGpusOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadFlexibleGpusResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = ReadFlexibleGpusRequestToJSON(requestParameters.readFlexibleGpusRequest);

        const request: runtime.RequestOpts = {
            path: `/ReadFlexibleGpus`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadFlexibleGpusResponseFromJSON(jsonValue));
    }

    /**
     */
    async readFlexibleGpus(requestParameters: ReadFlexibleGpusOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadFlexibleGpusResponse> {
        const response = await this.readFlexibleGpusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async unlinkFlexibleGpuRaw(requestParameters: UnlinkFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UnlinkFlexibleGpuResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = UnlinkFlexibleGpuRequestToJSON(requestParameters.unlinkFlexibleGpuRequest);

        const request: runtime.RequestOpts = {
            path: `/UnlinkFlexibleGpu`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UnlinkFlexibleGpuResponseFromJSON(jsonValue));
    }

    /**
     */
    async unlinkFlexibleGpu(requestParameters: UnlinkFlexibleGpuOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UnlinkFlexibleGpuResponse> {
        const response = await this.unlinkFlexibleGpuRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async updateFlexibleGpuRaw(requestParameters: UpdateFlexibleGpuOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UpdateFlexibleGpuResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }



        const body: any = UpdateFlexibleGpuRequestToJSON(requestParameters.updateFlexibleGpuRequest);

        const request: runtime.RequestOpts = {
            path: `/UpdateFlexibleGpu`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: body,
        }
        if (this.configuration && this.configuration.awsV4SignerParameters) {
            const SignUrl = this.configuration.basePath + request.path;
            const SignBody = JSON.stringify(request.body);
            const signer = new runtime.AwsV4Signer(this.configuration.awsV4SignerParameters);
            const signResult = await signer.sign('POST', SignUrl, headerParameters, SignBody);
            //request.url = signResult.url;
            //request.method = signResult.method;
            request.headers = signResult.headers;
        }
        const response = await this.request(request, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UpdateFlexibleGpuResponseFromJSON(jsonValue));
    }

    /**
     */
    async updateFlexibleGpu(requestParameters: UpdateFlexibleGpuOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UpdateFlexibleGpuResponse> {
        const response = await this.updateFlexibleGpuRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
