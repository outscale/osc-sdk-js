/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.26
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CatalogEntry } from './CatalogEntry';
/**
 * Information about the catalogs.
 * @export
 * @interface Catalogs
 */
export interface Catalogs {
    /**
     * One or more catalog entries.
     * @type {Array<CatalogEntry>}
     * @memberof Catalogs
     */
    entries?: Array<CatalogEntry>;
    /**
     * The beginning of the time period, in ISO 8601 date-time format.
     * @type {Date}
     * @memberof Catalogs
     */
    fromDate?: Date;
    /**
     * The state of the catalog (`CURRENT` \| `OBSOLETE`).
     * @type {string}
     * @memberof Catalogs
     */
    state?: CatalogsStateEnum;
    /**
     * The end of the time period, in ISO 8601 date-time format.
     * @type {Date}
     * @memberof Catalogs
     */
    toDate?: Date;
}
/**
 * @export
 */
export declare const CatalogsStateEnum: {
    readonly Current: "CURRENT";
    readonly Obsolete: "OBSOLETE";
};
export declare type CatalogsStateEnum = typeof CatalogsStateEnum[keyof typeof CatalogsStateEnum];
export declare function CatalogsFromJSON(json: any): Catalogs;
export declare function CatalogsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Catalogs;
export declare function CatalogsToJSON(value?: Catalogs | null): any;
