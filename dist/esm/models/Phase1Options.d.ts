/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations.
 * @export
 * @interface Phase1Options
 */
export interface Phase1Options {
    /**
     * The action to carry out after a Dead Peer Detection (DPD) timeout occurs.
     * @type {string}
     * @memberof Phase1Options
     */
    dpdTimeoutAction?: string;
    /**
     * The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds.
     * @type {number}
     * @memberof Phase1Options
     */
    dpdTimeoutSeconds?: number;
    /**
     * The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.
     * @type {Array<string>}
     * @memberof Phase1Options
     */
    ikeVersions?: Array<string>;
    /**
     * The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.
     * @type {Array<number>}
     * @memberof Phase1Options
     */
    phase1DhGroupNumbers?: Array<number>;
    /**
     * The encryption algorithms allowed for the VPN tunnel for phase 1.
     * @type {Array<string>}
     * @memberof Phase1Options
     */
    phase1EncryptionAlgorithms?: Array<string>;
    /**
     * The integrity algorithms allowed for the VPN tunnel for phase 1.
     * @type {Array<string>}
     * @memberof Phase1Options
     */
    phase1IntegrityAlgorithms?: Array<string>;
    /**
     * The lifetime for phase 1 of the IKE negotiation process, in seconds.
     * @type {number}
     * @memberof Phase1Options
     */
    phase1LifetimeSeconds?: number;
    /**
     * The number of packets in an IKE replay window.
     * @type {number}
     * @memberof Phase1Options
     */
    replayWindowSize?: number;
    /**
     * The action to carry out when establishing tunnels for a VPN connection.
     * @type {string}
     * @memberof Phase1Options
     */
    startupAction?: string;
}
export declare function Phase1OptionsFromJSON(json: any): Phase1Options;
export declare function Phase1OptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Phase1Options;
export declare function Phase1OptionsToJSON(value?: Phase1Options | null): any;
