/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Information about the log.
 * @export
 * @interface Log
 */
export interface Log {
    /**
     * The account ID of the logged call.
     * @type {string}
     * @memberof Log
     */
    accountId?: string;
    /**
     * The duration of the logged call, in microseconds.
     * @type {number}
     * @memberof Log
     */
    callDuration?: number;
    /**
     * The access key used for the logged call.
     * @type {string}
     * @memberof Log
     */
    queryAccessKey?: string;
    /**
     * The name of the API used by the logged call (always `oapi` for the OUTSCALE API).
     * @type {string}
     * @memberof Log
     */
    queryApiName?: string;
    /**
     * The version of the API used by the logged call.
     * @type {string}
     * @memberof Log
     */
    queryApiVersion?: string;
    /**
     * The name of the logged call.
     * @type {string}
     * @memberof Log
     */
    queryCallName?: string;
    /**
     * The date of the logged call, in ISO 8601 format.
     * @type {Date}
     * @memberof Log
     */
    queryDate?: Date;
    /**
     * The raw header of the HTTP request of the logged call.
     * @type {string}
     * @memberof Log
     */
    queryHeaderRaw?: string;
    /**
     * The size of the raw header of the HTTP request of the logged call, in bytes.
     * @type {number}
     * @memberof Log
     */
    queryHeaderSize?: number;
    /**
     * The IP used for the logged call.
     * @type {string}
     * @memberof Log
     */
    queryIpAddress?: string;
    /**
     * The raw payload of the HTTP request of the logged call.
     * @type {string}
     * @memberof Log
     */
    queryPayloadRaw?: string;
    /**
     * The size of the raw payload of the HTTP request of the logged call, in bytes.
     * @type {number}
     * @memberof Log
     */
    queryPayloadSize?: number;
    /**
     * The user agent of the HTTP request of the logged call.
     * @type {string}
     * @memberof Log
     */
    queryUserAgent?: string;
    /**
     * The request ID provided in the response of the logged call.
     * @type {string}
     * @memberof Log
     */
    requestId?: string;
    /**
     * The size of the response of the logged call, in bytes.
     * @type {number}
     * @memberof Log
     */
    responseSize?: number;
    /**
     * The HTTP status code of the response of the logged call.
     * @type {number}
     * @memberof Log
     */
    responseStatusCode?: number;
}
export declare function LogFromJSON(json: any): Log;
export declare function LogFromJSONTyped(json: any, ignoreDiscriminator: boolean): Log;
export declare function LogToJSON(value?: Log | null): any;
