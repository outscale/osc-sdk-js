/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ModelResponseContextFromJSON, ModelResponseContextToJSON, } from './ModelResponseContext';
import { ProductTypeFromJSON, ProductTypeToJSON, } from './ProductType';
export function ReadProductTypesResponseFromJSON(json) {
    return ReadProductTypesResponseFromJSONTyped(json, false);
}
export function ReadProductTypesResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'productTypes': !exists(json, 'ProductTypes') ? undefined : (json['ProductTypes'].map(ProductTypeFromJSON)),
        'responseContext': !exists(json, 'ResponseContext') ? undefined : ModelResponseContextFromJSON(json['ResponseContext']),
    };
}
export function ReadProductTypesResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ProductTypes': value.productTypes === undefined ? undefined : (value.productTypes.map(ProductTypeToJSON)),
        'ResponseContext': ModelResponseContextToJSON(value.responseContext),
    };
}
