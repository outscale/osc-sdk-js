/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ListenerForCreationFromJSON, ListenerForCreationToJSON, } from './ListenerForCreation';
import { ResourceTagFromJSON, ResourceTagToJSON, } from './ResourceTag';
export function CreateLoadBalancerRequestFromJSON(json) {
    return CreateLoadBalancerRequestFromJSONTyped(json, false);
}
export function CreateLoadBalancerRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'dryRun': !exists(json, 'DryRun') ? undefined : json['DryRun'],
        'listeners': (json['Listeners'].map(ListenerForCreationFromJSON)),
        'loadBalancerName': json['LoadBalancerName'],
        'loadBalancerType': !exists(json, 'LoadBalancerType') ? undefined : json['LoadBalancerType'],
        'publicIp': !exists(json, 'PublicIp') ? undefined : json['PublicIp'],
        'securityGroups': !exists(json, 'SecurityGroups') ? undefined : json['SecurityGroups'],
        'subnets': !exists(json, 'Subnets') ? undefined : json['Subnets'],
        'subregionNames': !exists(json, 'SubregionNames') ? undefined : json['SubregionNames'],
        'tags': !exists(json, 'Tags') ? undefined : (json['Tags'].map(ResourceTagFromJSON)),
    };
}
export function CreateLoadBalancerRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'DryRun': value.dryRun,
        'Listeners': (value.listeners.map(ListenerForCreationToJSON)),
        'LoadBalancerName': value.loadBalancerName,
        'LoadBalancerType': value.loadBalancerType,
        'PublicIp': value.publicIp,
        'SecurityGroups': value.securityGroups,
        'Subnets': value.subnets,
        'SubregionNames': value.subregionNames,
        'Tags': value.tags === undefined ? undefined : (value.tags.map(ResourceTagToJSON)),
    };
}
