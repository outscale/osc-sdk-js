/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Information about the health check configuration.
 * @export
 * @interface HealthCheck
 */
export interface HealthCheck {
    /**
     * The number of seconds between two pings (between `5` and `600` both included).
     * @type {number}
     * @memberof HealthCheck
     */
    checkInterval: number;
    /**
     * The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included).
     * @type {number}
     * @memberof HealthCheck
     */
    healthyThreshold: number;
    /**
     * If you use the HTTP or HTTPS protocols, the ping path.
     * @type {string}
     * @memberof HealthCheck
     */
    path?: string;
    /**
     * The port number (between `1` and `65535`, both included).
     * @type {number}
     * @memberof HealthCheck
     */
    port: number;
    /**
     * The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
     * @type {string}
     * @memberof HealthCheck
     */
    protocol: string;
    /**
     * The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
     * @type {number}
     * @memberof HealthCheck
     */
    timeout: number;
    /**
     * The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included).
     * @type {number}
     * @memberof HealthCheck
     */
    unhealthyThreshold: number;
}
export declare function HealthCheckFromJSON(json: any): HealthCheck;
export declare function HealthCheckFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthCheck;
export declare function HealthCheckToJSON(value?: HealthCheck | null): any;
