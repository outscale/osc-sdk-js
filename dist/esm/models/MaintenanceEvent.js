/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.27
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
export function MaintenanceEventFromJSON(json) {
    return MaintenanceEventFromJSONTyped(json, false);
}
export function MaintenanceEventFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !exists(json, 'Code') ? undefined : json['Code'],
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'notAfter': !exists(json, 'NotAfter') ? undefined : (new Date(json['NotAfter'])),
        'notBefore': !exists(json, 'NotBefore') ? undefined : (new Date(json['NotBefore'])),
    };
}
export function MaintenanceEventToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Code': value.code,
        'Description': value.description,
        'NotAfter': value.notAfter === undefined ? undefined : (value.notAfter.toISOString().substr(0, 10)),
        'NotBefore': value.notBefore === undefined ? undefined : (value.notBefore.toISOString().substr(0, 10)),
    };
}
