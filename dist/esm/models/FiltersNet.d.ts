/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.20
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * One or more filters.
 * @export
 * @interface FiltersNet
 */
export interface FiltersNet {
    /**
     * The IDs of the DHCP options sets.
     * @type {Array<string>}
     * @memberof FiltersNet
     */
    dhcpOptionsSetIds?: Array<string>;
    /**
     * The IP ranges for the Nets, in CIDR notation (for example, `10.0.0.0/16`).
     * @type {Array<string>}
     * @memberof FiltersNet
     */
    ipRanges?: Array<string>;
    /**
     * If true, the Net used is the default one.
     * @type {boolean}
     * @memberof FiltersNet
     */
    isDefault?: boolean;
    /**
     * The IDs of the Nets.
     * @type {Array<string>}
     * @memberof FiltersNet
     */
    netIds?: Array<string>;
    /**
     * The states of the Nets (`pending` \| `available`).
     * @type {Array<string>}
     * @memberof FiltersNet
     */
    states?: Array<string>;
    /**
     * The keys of the tags associated with the Nets.
     * @type {Array<string>}
     * @memberof FiltersNet
     */
    tagKeys?: Array<string>;
    /**
     * The values of the tags associated with the Nets.
     * @type {Array<string>}
     * @memberof FiltersNet
     */
    tagValues?: Array<string>;
    /**
     * The key/value combination of the tags associated with the Nets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.
     * @type {Array<string>}
     * @memberof FiltersNet
     */
    tags?: Array<string>;
}
export declare function FiltersNetFromJSON(json: any): FiltersNet;
export declare function FiltersNetFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiltersNet;
export declare function FiltersNetToJSON(value?: FiltersNet | null): any;
