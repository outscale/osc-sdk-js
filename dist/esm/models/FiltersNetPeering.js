/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
export function FiltersNetPeeringFromJSON(json) {
    return FiltersNetPeeringFromJSONTyped(json, false);
}
export function FiltersNetPeeringFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accepterNetAccountIds': !exists(json, 'AccepterNetAccountIds') ? undefined : json['AccepterNetAccountIds'],
        'accepterNetIpRanges': !exists(json, 'AccepterNetIpRanges') ? undefined : json['AccepterNetIpRanges'],
        'accepterNetNetIds': !exists(json, 'AccepterNetNetIds') ? undefined : json['AccepterNetNetIds'],
        'netPeeringIds': !exists(json, 'NetPeeringIds') ? undefined : json['NetPeeringIds'],
        'sourceNetAccountIds': !exists(json, 'SourceNetAccountIds') ? undefined : json['SourceNetAccountIds'],
        'sourceNetIpRanges': !exists(json, 'SourceNetIpRanges') ? undefined : json['SourceNetIpRanges'],
        'sourceNetNetIds': !exists(json, 'SourceNetNetIds') ? undefined : json['SourceNetNetIds'],
        'stateMessages': !exists(json, 'StateMessages') ? undefined : json['StateMessages'],
        'stateNames': !exists(json, 'StateNames') ? undefined : json['StateNames'],
        'tagKeys': !exists(json, 'TagKeys') ? undefined : json['TagKeys'],
        'tagValues': !exists(json, 'TagValues') ? undefined : json['TagValues'],
        'tags': !exists(json, 'Tags') ? undefined : json['Tags'],
    };
}
export function FiltersNetPeeringToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'AccepterNetAccountIds': value.accepterNetAccountIds,
        'AccepterNetIpRanges': value.accepterNetIpRanges,
        'AccepterNetNetIds': value.accepterNetNetIds,
        'NetPeeringIds': value.netPeeringIds,
        'SourceNetAccountIds': value.sourceNetAccountIds,
        'SourceNetIpRanges': value.sourceNetIpRanges,
        'SourceNetNetIds': value.sourceNetNetIds,
        'StateMessages': value.stateMessages,
        'StateNames': value.stateNames,
        'TagKeys': value.tagKeys,
        'TagValues': value.tagValues,
        'Tags': value.tags,
    };
}
