/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.25
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AcceptNetPeeringRequest, AcceptNetPeeringResponse, CreateNetPeeringRequest, CreateNetPeeringResponse, DeleteNetPeeringRequest, DeleteNetPeeringResponse, ReadNetPeeringsRequest, ReadNetPeeringsResponse, RejectNetPeeringRequest, RejectNetPeeringResponse } from '../models';
export interface AcceptNetPeeringOperationRequest {
    acceptNetPeeringRequest?: AcceptNetPeeringRequest;
}
export interface CreateNetPeeringOperationRequest {
    createNetPeeringRequest?: CreateNetPeeringRequest;
}
export interface DeleteNetPeeringOperationRequest {
    deleteNetPeeringRequest?: DeleteNetPeeringRequest;
}
export interface ReadNetPeeringsOperationRequest {
    readNetPeeringsRequest?: ReadNetPeeringsRequest;
}
export interface RejectNetPeeringOperationRequest {
    rejectNetPeeringRequest?: RejectNetPeeringRequest;
}
/**
 * NetPeeringApi - interface
 *
 * @export
 * @interface NetPeeringApiInterface
 */
export interface NetPeeringApiInterface {
    /**
     *
     * @param {AcceptNetPeeringRequest} [acceptNetPeeringRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetPeeringApiInterface
     */
    acceptNetPeeringRaw(requestParameters: AcceptNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<AcceptNetPeeringResponse>>;
    /**
     */
    acceptNetPeering(requestParameters: AcceptNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<AcceptNetPeeringResponse>;
    /**
     *
     * @param {CreateNetPeeringRequest} [createNetPeeringRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetPeeringApiInterface
     */
    createNetPeeringRaw(requestParameters: CreateNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateNetPeeringResponse>>;
    /**
     */
    createNetPeering(requestParameters: CreateNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateNetPeeringResponse>;
    /**
     *
     * @param {DeleteNetPeeringRequest} [deleteNetPeeringRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetPeeringApiInterface
     */
    deleteNetPeeringRaw(requestParameters: DeleteNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteNetPeeringResponse>>;
    /**
     */
    deleteNetPeering(requestParameters: DeleteNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteNetPeeringResponse>;
    /**
     *
     * @param {ReadNetPeeringsRequest} [readNetPeeringsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetPeeringApiInterface
     */
    readNetPeeringsRaw(requestParameters: ReadNetPeeringsOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadNetPeeringsResponse>>;
    /**
     */
    readNetPeerings(requestParameters: ReadNetPeeringsOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadNetPeeringsResponse>;
    /**
     *
     * @param {RejectNetPeeringRequest} [rejectNetPeeringRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetPeeringApiInterface
     */
    rejectNetPeeringRaw(requestParameters: RejectNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<RejectNetPeeringResponse>>;
    /**
     */
    rejectNetPeering(requestParameters: RejectNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<RejectNetPeeringResponse>;
}
/**
 *
 */
export declare class NetPeeringApi extends runtime.BaseAPI implements NetPeeringApiInterface {
    /**
     */
    acceptNetPeeringRaw(requestParameters: AcceptNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<AcceptNetPeeringResponse>>;
    /**
     */
    acceptNetPeering(requestParameters?: AcceptNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<AcceptNetPeeringResponse>;
    /**
     */
    createNetPeeringRaw(requestParameters: CreateNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateNetPeeringResponse>>;
    /**
     */
    createNetPeering(requestParameters?: CreateNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateNetPeeringResponse>;
    /**
     */
    deleteNetPeeringRaw(requestParameters: DeleteNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteNetPeeringResponse>>;
    /**
     */
    deleteNetPeering(requestParameters?: DeleteNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteNetPeeringResponse>;
    /**
     */
    readNetPeeringsRaw(requestParameters: ReadNetPeeringsOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadNetPeeringsResponse>>;
    /**
     */
    readNetPeerings(requestParameters?: ReadNetPeeringsOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadNetPeeringsResponse>;
    /**
     */
    rejectNetPeeringRaw(requestParameters: RejectNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<RejectNetPeeringResponse>>;
    /**
     */
    rejectNetPeering(requestParameters?: RejectNetPeeringOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<RejectNetPeeringResponse>;
}
