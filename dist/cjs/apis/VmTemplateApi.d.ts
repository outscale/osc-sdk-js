/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. >  > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html). ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages. ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html).
 *
 * The version of the OpenAPI document: 1.28.5
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { CreateVmTemplateRequest, CreateVmTemplateResponse, DeleteVmTemplateRequest, DeleteVmTemplateResponse, ReadVmTemplatesRequest, ReadVmTemplatesResponse, UpdateVmTemplateRequest, UpdateVmTemplateResponse } from '../models';
export interface CreateVmTemplateOperationRequest {
    createVmTemplateRequest?: CreateVmTemplateRequest;
}
export interface DeleteVmTemplateOperationRequest {
    deleteVmTemplateRequest?: DeleteVmTemplateRequest;
}
export interface ReadVmTemplatesOperationRequest {
    readVmTemplatesRequest?: ReadVmTemplatesRequest;
}
export interface UpdateVmTemplateOperationRequest {
    updateVmTemplateRequest?: UpdateVmTemplateRequest;
}
/**
 * VmTemplateApi - interface
 *
 * @export
 * @interface VmTemplateApiInterface
 */
export interface VmTemplateApiInterface {
    /**
     *
     * @param {CreateVmTemplateRequest} [createVmTemplateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VmTemplateApiInterface
     */
    createVmTemplateRaw(requestParameters: CreateVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateVmTemplateResponse>>;
    /**
     */
    createVmTemplate(requestParameters: CreateVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateVmTemplateResponse>;
    /**
     *
     * @param {DeleteVmTemplateRequest} [deleteVmTemplateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VmTemplateApiInterface
     */
    deleteVmTemplateRaw(requestParameters: DeleteVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteVmTemplateResponse>>;
    /**
     */
    deleteVmTemplate(requestParameters: DeleteVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteVmTemplateResponse>;
    /**
     *
     * @param {ReadVmTemplatesRequest} [readVmTemplatesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VmTemplateApiInterface
     */
    readVmTemplatesRaw(requestParameters: ReadVmTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadVmTemplatesResponse>>;
    /**
     */
    readVmTemplates(requestParameters: ReadVmTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadVmTemplatesResponse>;
    /**
     *
     * @param {UpdateVmTemplateRequest} [updateVmTemplateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VmTemplateApiInterface
     */
    updateVmTemplateRaw(requestParameters: UpdateVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UpdateVmTemplateResponse>>;
    /**
     */
    updateVmTemplate(requestParameters: UpdateVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UpdateVmTemplateResponse>;
}
/**
 *
 */
export declare class VmTemplateApi extends runtime.BaseAPI implements VmTemplateApiInterface {
    /**
     */
    createVmTemplateRaw(requestParameters: CreateVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateVmTemplateResponse>>;
    /**
     */
    createVmTemplate(requestParameters?: CreateVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateVmTemplateResponse>;
    /**
     */
    deleteVmTemplateRaw(requestParameters: DeleteVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteVmTemplateResponse>>;
    /**
     */
    deleteVmTemplate(requestParameters?: DeleteVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteVmTemplateResponse>;
    /**
     */
    readVmTemplatesRaw(requestParameters: ReadVmTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadVmTemplatesResponse>>;
    /**
     */
    readVmTemplates(requestParameters?: ReadVmTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadVmTemplatesResponse>;
    /**
     */
    updateVmTemplateRaw(requestParameters: UpdateVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UpdateVmTemplateResponse>>;
    /**
     */
    updateVmTemplate(requestParameters?: UpdateVmTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UpdateVmTemplateResponse>;
}
