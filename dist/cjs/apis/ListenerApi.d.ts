/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of this API is also available for download: <button>[GitHub repository](https://github.com/outscale/osc-api)</button><br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * The version of the OpenAPI document: 1.35.5
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { CreateListenerRuleRequest, CreateListenerRuleResponse, CreateLoadBalancerListenersRequest, CreateLoadBalancerListenersResponse, DeleteListenerRuleRequest, DeleteListenerRuleResponse, DeleteLoadBalancerListenersRequest, DeleteLoadBalancerListenersResponse, ReadListenerRulesRequest, ReadListenerRulesResponse, UpdateListenerRuleRequest, UpdateListenerRuleResponse } from '../models';
export interface CreateListenerRuleOperationRequest {
    createListenerRuleRequest?: CreateListenerRuleRequest;
}
export interface CreateLoadBalancerListenersOperationRequest {
    createLoadBalancerListenersRequest?: CreateLoadBalancerListenersRequest;
}
export interface DeleteListenerRuleOperationRequest {
    deleteListenerRuleRequest?: DeleteListenerRuleRequest;
}
export interface DeleteLoadBalancerListenersOperationRequest {
    deleteLoadBalancerListenersRequest?: DeleteLoadBalancerListenersRequest;
}
export interface ReadListenerRulesOperationRequest {
    readListenerRulesRequest?: ReadListenerRulesRequest;
}
export interface UpdateListenerRuleOperationRequest {
    updateListenerRuleRequest?: UpdateListenerRuleRequest;
}
/**
 * ListenerApi - interface
 *
 * @export
 * @interface ListenerApiInterface
 */
export interface ListenerApiInterface {
    /**
     * Creates a rule for traffic redirection for the specified listener. Each rule must have either the `HostNamePattern` or `PathPattern` parameter specified. Rules are treated in priority order, from the highest value to the lowest value.<br /> Once the rule is created, you need to register backend VMs with it. For more information, see the [RegisterVmsInLoadBalancer](#registervmsinloadbalancer) method.<br /><br /> For more information, see [About Load Balancers](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).
     * @param {CreateListenerRuleRequest} [createListenerRuleRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListenerApiInterface
     */
    createListenerRuleRaw(requestParameters: CreateListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateListenerRuleResponse>>;
    /**
     * Creates a rule for traffic redirection for the specified listener. Each rule must have either the `HostNamePattern` or `PathPattern` parameter specified. Rules are treated in priority order, from the highest value to the lowest value.<br /> Once the rule is created, you need to register backend VMs with it. For more information, see the [RegisterVmsInLoadBalancer](#registervmsinloadbalancer) method.<br /><br /> For more information, see [About Load Balancers](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).
     */
    createListenerRule(requestParameters: CreateListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateListenerRuleResponse>;
    /**
     * Creates one or more listeners for a specified load balancer.<br /><br /> For more information, see [About Load Balancers](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).
     * @param {CreateLoadBalancerListenersRequest} [createLoadBalancerListenersRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListenerApiInterface
     */
    createLoadBalancerListenersRaw(requestParameters: CreateLoadBalancerListenersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateLoadBalancerListenersResponse>>;
    /**
     * Creates one or more listeners for a specified load balancer.<br /><br /> For more information, see [About Load Balancers](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).
     */
    createLoadBalancerListeners(requestParameters: CreateLoadBalancerListenersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateLoadBalancerListenersResponse>;
    /**
     * Deletes a listener rule.<br /> The previously active rule is disabled after deletion.
     * @param {DeleteListenerRuleRequest} [deleteListenerRuleRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListenerApiInterface
     */
    deleteListenerRuleRaw(requestParameters: DeleteListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteListenerRuleResponse>>;
    /**
     * Deletes a listener rule.<br /> The previously active rule is disabled after deletion.
     */
    deleteListenerRule(requestParameters: DeleteListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteListenerRuleResponse>;
    /**
     * Deletes listeners of a specified load balancer.
     * @param {DeleteLoadBalancerListenersRequest} [deleteLoadBalancerListenersRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListenerApiInterface
     */
    deleteLoadBalancerListenersRaw(requestParameters: DeleteLoadBalancerListenersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteLoadBalancerListenersResponse>>;
    /**
     * Deletes listeners of a specified load balancer.
     */
    deleteLoadBalancerListeners(requestParameters: DeleteLoadBalancerListenersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteLoadBalancerListenersResponse>;
    /**
     * Lists one or more listener rules. By default, this action returns the full list of listener rules for the account.
     * @param {ReadListenerRulesRequest} [readListenerRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListenerApiInterface
     */
    readListenerRulesRaw(requestParameters: ReadListenerRulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadListenerRulesResponse>>;
    /**
     * Lists one or more listener rules. By default, this action returns the full list of listener rules for the account.
     */
    readListenerRules(requestParameters: ReadListenerRulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadListenerRulesResponse>;
    /**
     * Updates the pattern of the listener rule.<br /> This call updates the pattern matching algorithm for incoming traffic.
     * @param {UpdateListenerRuleRequest} [updateListenerRuleRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListenerApiInterface
     */
    updateListenerRuleRaw(requestParameters: UpdateListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UpdateListenerRuleResponse>>;
    /**
     * Updates the pattern of the listener rule.<br /> This call updates the pattern matching algorithm for incoming traffic.
     */
    updateListenerRule(requestParameters: UpdateListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UpdateListenerRuleResponse>;
}
/**
 *
 */
export declare class ListenerApi extends runtime.BaseAPI implements ListenerApiInterface {
    /**
     * Creates a rule for traffic redirection for the specified listener. Each rule must have either the `HostNamePattern` or `PathPattern` parameter specified. Rules are treated in priority order, from the highest value to the lowest value.<br /> Once the rule is created, you need to register backend VMs with it. For more information, see the [RegisterVmsInLoadBalancer](#registervmsinloadbalancer) method.<br /><br /> For more information, see [About Load Balancers](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).
     */
    createListenerRuleRaw(requestParameters: CreateListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateListenerRuleResponse>>;
    /**
     * Creates a rule for traffic redirection for the specified listener. Each rule must have either the `HostNamePattern` or `PathPattern` parameter specified. Rules are treated in priority order, from the highest value to the lowest value.<br /> Once the rule is created, you need to register backend VMs with it. For more information, see the [RegisterVmsInLoadBalancer](#registervmsinloadbalancer) method.<br /><br /> For more information, see [About Load Balancers](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).
     */
    createListenerRule(requestParameters?: CreateListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateListenerRuleResponse>;
    /**
     * Creates one or more listeners for a specified load balancer.<br /><br /> For more information, see [About Load Balancers](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).
     */
    createLoadBalancerListenersRaw(requestParameters: CreateLoadBalancerListenersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateLoadBalancerListenersResponse>>;
    /**
     * Creates one or more listeners for a specified load balancer.<br /><br /> For more information, see [About Load Balancers](https://docs.outscale.com/en/userguide/About-Load-Balancers.html).
     */
    createLoadBalancerListeners(requestParameters?: CreateLoadBalancerListenersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateLoadBalancerListenersResponse>;
    /**
     * Deletes a listener rule.<br /> The previously active rule is disabled after deletion.
     */
    deleteListenerRuleRaw(requestParameters: DeleteListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteListenerRuleResponse>>;
    /**
     * Deletes a listener rule.<br /> The previously active rule is disabled after deletion.
     */
    deleteListenerRule(requestParameters?: DeleteListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteListenerRuleResponse>;
    /**
     * Deletes listeners of a specified load balancer.
     */
    deleteLoadBalancerListenersRaw(requestParameters: DeleteLoadBalancerListenersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeleteLoadBalancerListenersResponse>>;
    /**
     * Deletes listeners of a specified load balancer.
     */
    deleteLoadBalancerListeners(requestParameters?: DeleteLoadBalancerListenersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeleteLoadBalancerListenersResponse>;
    /**
     * Lists one or more listener rules. By default, this action returns the full list of listener rules for the account.
     */
    readListenerRulesRaw(requestParameters: ReadListenerRulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ReadListenerRulesResponse>>;
    /**
     * Lists one or more listener rules. By default, this action returns the full list of listener rules for the account.
     */
    readListenerRules(requestParameters?: ReadListenerRulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ReadListenerRulesResponse>;
    /**
     * Updates the pattern of the listener rule.<br /> This call updates the pattern matching algorithm for incoming traffic.
     */
    updateListenerRuleRaw(requestParameters: UpdateListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<UpdateListenerRuleResponse>>;
    /**
     * Updates the pattern of the listener rule.<br /> This call updates the pattern matching algorithm for incoming traffic.
     */
    updateListenerRule(requestParameters?: UpdateListenerRuleOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<UpdateListenerRuleResponse>;
}
