/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * The version of the OpenAPI document: 1.35.4
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { DisableOutscaleLoginPerUsersRequest, DisableOutscaleLoginPerUsersResponse, DisableOutscaleLoginRequest, DisableOutscaleLoginResponse, EnableOutscaleLoginForUsersRequest, EnableOutscaleLoginForUsersResponse, EnableOutscaleLoginPerUsersRequest, EnableOutscaleLoginPerUsersResponse, EnableOutscaleLoginRequest, EnableOutscaleLoginResponse } from '../models';
export interface DisableOutscaleLoginOperationRequest {
    disableOutscaleLoginRequest?: DisableOutscaleLoginRequest;
}
export interface DisableOutscaleLoginForUsersZzRequest {
    disableOutscaleLoginRequest?: DisableOutscaleLoginRequest;
}
export interface DisableOutscaleLoginPerUsersOperationRequest {
    disableOutscaleLoginPerUsersRequest?: DisableOutscaleLoginPerUsersRequest;
}
export interface EnableOutscaleLoginOperationRequest {
    enableOutscaleLoginRequest?: EnableOutscaleLoginRequest;
}
export interface EnableOutscaleLoginForUsersZzRequest {
    enableOutscaleLoginForUsersRequest?: EnableOutscaleLoginForUsersRequest;
}
export interface EnableOutscaleLoginPerUsersOperationRequest {
    enableOutscaleLoginPerUsersRequest?: EnableOutscaleLoginPerUsersRequest;
}
/**
 * IdentityProviderApi - interface
 *
 * @export
 * @interface IdentityProviderApiInterface
 */
export interface IdentityProviderApiInterface {
    /**
     * Disables the possibility of logging in using the Outscale credentials of your root account when identity federation is activated.
     * @param {DisableOutscaleLoginRequest} [disableOutscaleLoginRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IdentityProviderApiInterface
     */
    disableOutscaleLoginRaw(requestParameters: DisableOutscaleLoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DisableOutscaleLoginResponse>>;
    /**
     * Disables the possibility of logging in using the Outscale credentials of your root account when identity federation is activated.
     */
    disableOutscaleLogin(requestParameters: DisableOutscaleLoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DisableOutscaleLoginResponse>;
    /**
     * Disables the possibility of logging in using the Outscale credentials of your EIM users when identity federation is activated.
     * @param {DisableOutscaleLoginRequest} [disableOutscaleLoginRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IdentityProviderApiInterface
     */
    disableOutscaleLoginForUsersZzRaw(requestParameters: DisableOutscaleLoginForUsersZzRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DisableOutscaleLoginResponse>>;
    /**
     * Disables the possibility of logging in using the Outscale credentials of your EIM users when identity federation is activated.
     */
    disableOutscaleLoginForUsersZz(requestParameters: DisableOutscaleLoginForUsersZzRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DisableOutscaleLoginResponse>;
    /**
     * Disables the possibility for one or more specific users to log in using their Outscale credentials when identity federation is activated.
     * @param {DisableOutscaleLoginPerUsersRequest} [disableOutscaleLoginPerUsersRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IdentityProviderApiInterface
     */
    disableOutscaleLoginPerUsersRaw(requestParameters: DisableOutscaleLoginPerUsersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DisableOutscaleLoginPerUsersResponse>>;
    /**
     * Disables the possibility for one or more specific users to log in using their Outscale credentials when identity federation is activated.
     */
    disableOutscaleLoginPerUsers(requestParameters: DisableOutscaleLoginPerUsersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DisableOutscaleLoginPerUsersResponse>;
    /**
     * Enables the possibility of logging in using the Outscale credentials of your root account when identity federation is activated.
     * @param {EnableOutscaleLoginRequest} [enableOutscaleLoginRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IdentityProviderApiInterface
     */
    enableOutscaleLoginRaw(requestParameters: EnableOutscaleLoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<EnableOutscaleLoginResponse>>;
    /**
     * Enables the possibility of logging in using the Outscale credentials of your root account when identity federation is activated.
     */
    enableOutscaleLogin(requestParameters: EnableOutscaleLoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<EnableOutscaleLoginResponse>;
    /**
     * Enables the possibility for all your EIM users to log in using their Outscale credentials when identity federation is activated.
     * @param {EnableOutscaleLoginForUsersRequest} [enableOutscaleLoginForUsersRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IdentityProviderApiInterface
     */
    enableOutscaleLoginForUsersZzRaw(requestParameters: EnableOutscaleLoginForUsersZzRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<EnableOutscaleLoginForUsersResponse>>;
    /**
     * Enables the possibility for all your EIM users to log in using their Outscale credentials when identity federation is activated.
     */
    enableOutscaleLoginForUsersZz(requestParameters: EnableOutscaleLoginForUsersZzRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<EnableOutscaleLoginForUsersResponse>;
    /**
     * Enables the possibility for one or more specific users to log in using their Outscale credentials when identity federation is activated.
     * @param {EnableOutscaleLoginPerUsersRequest} [enableOutscaleLoginPerUsersRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IdentityProviderApiInterface
     */
    enableOutscaleLoginPerUsersRaw(requestParameters: EnableOutscaleLoginPerUsersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<EnableOutscaleLoginPerUsersResponse>>;
    /**
     * Enables the possibility for one or more specific users to log in using their Outscale credentials when identity federation is activated.
     */
    enableOutscaleLoginPerUsers(requestParameters: EnableOutscaleLoginPerUsersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<EnableOutscaleLoginPerUsersResponse>;
}
/**
 *
 */
export declare class IdentityProviderApi extends runtime.BaseAPI implements IdentityProviderApiInterface {
    /**
     * Disables the possibility of logging in using the Outscale credentials of your root account when identity federation is activated.
     */
    disableOutscaleLoginRaw(requestParameters: DisableOutscaleLoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DisableOutscaleLoginResponse>>;
    /**
     * Disables the possibility of logging in using the Outscale credentials of your root account when identity federation is activated.
     */
    disableOutscaleLogin(requestParameters?: DisableOutscaleLoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DisableOutscaleLoginResponse>;
    /**
     * Disables the possibility of logging in using the Outscale credentials of your EIM users when identity federation is activated.
     */
    disableOutscaleLoginForUsersZzRaw(requestParameters: DisableOutscaleLoginForUsersZzRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DisableOutscaleLoginResponse>>;
    /**
     * Disables the possibility of logging in using the Outscale credentials of your EIM users when identity federation is activated.
     */
    disableOutscaleLoginForUsersZz(requestParameters?: DisableOutscaleLoginForUsersZzRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DisableOutscaleLoginResponse>;
    /**
     * Disables the possibility for one or more specific users to log in using their Outscale credentials when identity federation is activated.
     */
    disableOutscaleLoginPerUsersRaw(requestParameters: DisableOutscaleLoginPerUsersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DisableOutscaleLoginPerUsersResponse>>;
    /**
     * Disables the possibility for one or more specific users to log in using their Outscale credentials when identity federation is activated.
     */
    disableOutscaleLoginPerUsers(requestParameters?: DisableOutscaleLoginPerUsersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DisableOutscaleLoginPerUsersResponse>;
    /**
     * Enables the possibility of logging in using the Outscale credentials of your root account when identity federation is activated.
     */
    enableOutscaleLoginRaw(requestParameters: EnableOutscaleLoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<EnableOutscaleLoginResponse>>;
    /**
     * Enables the possibility of logging in using the Outscale credentials of your root account when identity federation is activated.
     */
    enableOutscaleLogin(requestParameters?: EnableOutscaleLoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<EnableOutscaleLoginResponse>;
    /**
     * Enables the possibility for all your EIM users to log in using their Outscale credentials when identity federation is activated.
     */
    enableOutscaleLoginForUsersZzRaw(requestParameters: EnableOutscaleLoginForUsersZzRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<EnableOutscaleLoginForUsersResponse>>;
    /**
     * Enables the possibility for all your EIM users to log in using their Outscale credentials when identity federation is activated.
     */
    enableOutscaleLoginForUsersZz(requestParameters?: EnableOutscaleLoginForUsersZzRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<EnableOutscaleLoginForUsersResponse>;
    /**
     * Enables the possibility for one or more specific users to log in using their Outscale credentials when identity federation is activated.
     */
    enableOutscaleLoginPerUsersRaw(requestParameters: EnableOutscaleLoginPerUsersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<EnableOutscaleLoginPerUsersResponse>>;
    /**
     * Enables the possibility for one or more specific users to log in using their Outscale credentials when identity federation is activated.
     */
    enableOutscaleLoginPerUsers(requestParameters?: EnableOutscaleLoginPerUsersOperationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<EnableOutscaleLoginPerUsersResponse>;
}
