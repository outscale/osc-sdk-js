"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NicForVmCreationToJSON = exports.NicForVmCreationFromJSONTyped = exports.NicForVmCreationFromJSON = void 0;
const runtime_1 = require("../runtime");
const PrivateIpLight_1 = require("./PrivateIpLight");
function NicForVmCreationFromJSON(json) {
    return NicForVmCreationFromJSONTyped(json, false);
}
exports.NicForVmCreationFromJSON = NicForVmCreationFromJSON;
function NicForVmCreationFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'deleteOnVmDeletion': !runtime_1.exists(json, 'DeleteOnVmDeletion') ? undefined : json['DeleteOnVmDeletion'],
        'description': !runtime_1.exists(json, 'Description') ? undefined : json['Description'],
        'deviceNumber': !runtime_1.exists(json, 'DeviceNumber') ? undefined : json['DeviceNumber'],
        'nicId': !runtime_1.exists(json, 'NicId') ? undefined : json['NicId'],
        'privateIps': !runtime_1.exists(json, 'PrivateIps') ? undefined : (json['PrivateIps'].map(PrivateIpLight_1.PrivateIpLightFromJSON)),
        'secondaryPrivateIpCount': !runtime_1.exists(json, 'SecondaryPrivateIpCount') ? undefined : json['SecondaryPrivateIpCount'],
        'securityGroupIds': !runtime_1.exists(json, 'SecurityGroupIds') ? undefined : json['SecurityGroupIds'],
        'subnetId': !runtime_1.exists(json, 'SubnetId') ? undefined : json['SubnetId'],
    };
}
exports.NicForVmCreationFromJSONTyped = NicForVmCreationFromJSONTyped;
function NicForVmCreationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'DeleteOnVmDeletion': value.deleteOnVmDeletion,
        'Description': value.description,
        'DeviceNumber': value.deviceNumber,
        'NicId': value.nicId,
        'PrivateIps': value.privateIps === undefined ? undefined : (value.privateIps.map(PrivateIpLight_1.PrivateIpLightToJSON)),
        'SecondaryPrivateIpCount': value.secondaryPrivateIpCount,
        'SecurityGroupIds': value.securityGroupIds,
        'SubnetId': value.subnetId,
    };
}
exports.NicForVmCreationToJSON = NicForVmCreationToJSON;
