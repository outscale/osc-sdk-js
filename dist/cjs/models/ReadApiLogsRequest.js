"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.20
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReadApiLogsRequestToJSON = exports.ReadApiLogsRequestFromJSONTyped = exports.ReadApiLogsRequestFromJSON = void 0;
const runtime_1 = require("../runtime");
const FiltersApiLog_1 = require("./FiltersApiLog");
const With_1 = require("./With");
function ReadApiLogsRequestFromJSON(json) {
    return ReadApiLogsRequestFromJSONTyped(json, false);
}
exports.ReadApiLogsRequestFromJSON = ReadApiLogsRequestFromJSON;
function ReadApiLogsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'dryRun': !(0, runtime_1.exists)(json, 'DryRun') ? undefined : json['DryRun'],
        'filters': !(0, runtime_1.exists)(json, 'Filters') ? undefined : (0, FiltersApiLog_1.FiltersApiLogFromJSON)(json['Filters']),
        'nextPageToken': !(0, runtime_1.exists)(json, 'NextPageToken') ? undefined : json['NextPageToken'],
        'resultsPerPage': !(0, runtime_1.exists)(json, 'ResultsPerPage') ? undefined : json['ResultsPerPage'],
        '_with': !(0, runtime_1.exists)(json, 'With') ? undefined : (0, With_1.WithFromJSON)(json['With']),
    };
}
exports.ReadApiLogsRequestFromJSONTyped = ReadApiLogsRequestFromJSONTyped;
function ReadApiLogsRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'DryRun': value.dryRun,
        'Filters': (0, FiltersApiLog_1.FiltersApiLogToJSON)(value.filters),
        'NextPageToken': value.nextPageToken,
        'ResultsPerPage': value.resultsPerPage,
        'With': (0, With_1.WithToJSON)(value._with),
    };
}
exports.ReadApiLogsRequestToJSON = ReadApiLogsRequestToJSON;
