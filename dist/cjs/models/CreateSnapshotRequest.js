"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateSnapshotRequestToJSON = exports.CreateSnapshotRequestFromJSONTyped = exports.CreateSnapshotRequestFromJSON = void 0;
const runtime_1 = require("../runtime");
function CreateSnapshotRequestFromJSON(json) {
    return CreateSnapshotRequestFromJSONTyped(json, false);
}
exports.CreateSnapshotRequestFromJSON = CreateSnapshotRequestFromJSON;
function CreateSnapshotRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !runtime_1.exists(json, 'Description') ? undefined : json['Description'],
        'dryRun': !runtime_1.exists(json, 'DryRun') ? undefined : json['DryRun'],
        'fileLocation': !runtime_1.exists(json, 'FileLocation') ? undefined : json['FileLocation'],
        'snapshotSize': !runtime_1.exists(json, 'SnapshotSize') ? undefined : json['SnapshotSize'],
        'sourceRegionName': !runtime_1.exists(json, 'SourceRegionName') ? undefined : json['SourceRegionName'],
        'sourceSnapshotId': !runtime_1.exists(json, 'SourceSnapshotId') ? undefined : json['SourceSnapshotId'],
        'volumeId': !runtime_1.exists(json, 'VolumeId') ? undefined : json['VolumeId'],
    };
}
exports.CreateSnapshotRequestFromJSONTyped = CreateSnapshotRequestFromJSONTyped;
function CreateSnapshotRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Description': value.description,
        'DryRun': value.dryRun,
        'FileLocation': value.fileLocation,
        'SnapshotSize': value.snapshotSize,
        'SourceRegionName': value.sourceRegionName,
        'SourceSnapshotId': value.sourceSnapshotId,
        'VolumeId': value.volumeId,
    };
}
exports.CreateSnapshotRequestToJSON = CreateSnapshotRequestToJSON;
