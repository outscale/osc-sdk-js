"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.26
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VmGroupToJSON = exports.VmGroupFromJSONTyped = exports.VmGroupFromJSON = exports.VmGroupStateEnum = exports.VmGroupPositioningStrategyEnum = void 0;
const runtime_1 = require("../runtime");
const ResourceTag_1 = require("./ResourceTag");
/**
 * @export
 */
exports.VmGroupPositioningStrategyEnum = {
    Attract: 'attract',
    NoStrategy: 'no-strategy',
    Repulse: 'repulse'
};
/**
 * @export
 */
exports.VmGroupStateEnum = {
    Available: 'available',
    Deleted: 'deleted',
    Deleting: 'deleting',
    Pending: 'pending',
    ScalingDown: 'scaling down',
    ScalingUp: 'scaling up'
};
function VmGroupFromJSON(json) {
    return VmGroupFromJSONTyped(json, false);
}
exports.VmGroupFromJSON = VmGroupFromJSON;
function VmGroupFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'creationDate': !(0, runtime_1.exists)(json, 'CreationDate') ? undefined : json['CreationDate'],
        'description': !(0, runtime_1.exists)(json, 'Description') ? undefined : json['Description'],
        'positioningStrategy': !(0, runtime_1.exists)(json, 'PositioningStrategy') ? undefined : json['PositioningStrategy'],
        'securityGroupIds': !(0, runtime_1.exists)(json, 'SecurityGroupIds') ? undefined : json['SecurityGroupIds'],
        'state': !(0, runtime_1.exists)(json, 'State') ? undefined : json['State'],
        'subnetId': !(0, runtime_1.exists)(json, 'SubnetId') ? undefined : json['SubnetId'],
        'tags': !(0, runtime_1.exists)(json, 'Tags') ? undefined : (json['Tags'].map(ResourceTag_1.ResourceTagFromJSON)),
        'vmCount': !(0, runtime_1.exists)(json, 'VmCount') ? undefined : json['VmCount'],
        'vmGroupId': !(0, runtime_1.exists)(json, 'VmGroupId') ? undefined : json['VmGroupId'],
        'vmGroupName': !(0, runtime_1.exists)(json, 'VmGroupName') ? undefined : json['VmGroupName'],
        'vmIds': !(0, runtime_1.exists)(json, 'VmIds') ? undefined : json['VmIds'],
        'vmTemplateId': !(0, runtime_1.exists)(json, 'VmTemplateId') ? undefined : json['VmTemplateId'],
    };
}
exports.VmGroupFromJSONTyped = VmGroupFromJSONTyped;
function VmGroupToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'CreationDate': value.creationDate,
        'Description': value.description,
        'PositioningStrategy': value.positioningStrategy,
        'SecurityGroupIds': value.securityGroupIds,
        'State': value.state,
        'SubnetId': value.subnetId,
        'Tags': value.tags === undefined ? undefined : (value.tags.map(ResourceTag_1.ResourceTagToJSON)),
        'VmCount': value.vmCount,
        'VmGroupId': value.vmGroupId,
        'VmGroupName': value.vmGroupName,
        'VmIds': value.vmIds,
        'VmTemplateId': value.vmTemplateId,
    };
}
exports.VmGroupToJSON = VmGroupToJSON;
