"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.25
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateLoadBalancerRequestToJSON = exports.UpdateLoadBalancerRequestFromJSONTyped = exports.UpdateLoadBalancerRequestFromJSON = void 0;
const runtime_1 = require("../runtime");
const AccessLog_1 = require("./AccessLog");
const HealthCheck_1 = require("./HealthCheck");
function UpdateLoadBalancerRequestFromJSON(json) {
    return UpdateLoadBalancerRequestFromJSONTyped(json, false);
}
exports.UpdateLoadBalancerRequestFromJSON = UpdateLoadBalancerRequestFromJSON;
function UpdateLoadBalancerRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accessLog': !(0, runtime_1.exists)(json, 'AccessLog') ? undefined : (0, AccessLog_1.AccessLogFromJSON)(json['AccessLog']),
        'dryRun': !(0, runtime_1.exists)(json, 'DryRun') ? undefined : json['DryRun'],
        'healthCheck': !(0, runtime_1.exists)(json, 'HealthCheck') ? undefined : (0, HealthCheck_1.HealthCheckFromJSON)(json['HealthCheck']),
        'loadBalancerName': json['LoadBalancerName'],
        'loadBalancerPort': !(0, runtime_1.exists)(json, 'LoadBalancerPort') ? undefined : json['LoadBalancerPort'],
        'policyNames': !(0, runtime_1.exists)(json, 'PolicyNames') ? undefined : json['PolicyNames'],
        'publicIp': !(0, runtime_1.exists)(json, 'PublicIp') ? undefined : json['PublicIp'],
        'securedCookies': !(0, runtime_1.exists)(json, 'SecuredCookies') ? undefined : json['SecuredCookies'],
        'securityGroups': !(0, runtime_1.exists)(json, 'SecurityGroups') ? undefined : json['SecurityGroups'],
        'serverCertificateId': !(0, runtime_1.exists)(json, 'ServerCertificateId') ? undefined : json['ServerCertificateId'],
    };
}
exports.UpdateLoadBalancerRequestFromJSONTyped = UpdateLoadBalancerRequestFromJSONTyped;
function UpdateLoadBalancerRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'AccessLog': (0, AccessLog_1.AccessLogToJSON)(value.accessLog),
        'DryRun': value.dryRun,
        'HealthCheck': (0, HealthCheck_1.HealthCheckToJSON)(value.healthCheck),
        'LoadBalancerName': value.loadBalancerName,
        'LoadBalancerPort': value.loadBalancerPort,
        'PolicyNames': value.policyNames,
        'PublicIp': value.publicIp,
        'SecuredCookies': value.securedCookies,
        'SecurityGroups': value.securityGroups,
        'ServerCertificateId': value.serverCertificateId,
    };
}
exports.UpdateLoadBalancerRequestToJSON = UpdateLoadBalancerRequestToJSON;
