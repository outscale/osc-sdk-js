"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FiltersNetAccessPointToJSON = exports.FiltersNetAccessPointFromJSONTyped = exports.FiltersNetAccessPointFromJSON = void 0;
const runtime_1 = require("../runtime");
function FiltersNetAccessPointFromJSON(json) {
    return FiltersNetAccessPointFromJSONTyped(json, false);
}
exports.FiltersNetAccessPointFromJSON = FiltersNetAccessPointFromJSON;
function FiltersNetAccessPointFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'netAccessPointIds': !runtime_1.exists(json, 'NetAccessPointIds') ? undefined : json['NetAccessPointIds'],
        'netIds': !runtime_1.exists(json, 'NetIds') ? undefined : json['NetIds'],
        'serviceNames': !runtime_1.exists(json, 'ServiceNames') ? undefined : json['ServiceNames'],
        'states': !runtime_1.exists(json, 'States') ? undefined : json['States'],
        'tagKeys': !runtime_1.exists(json, 'TagKeys') ? undefined : json['TagKeys'],
        'tagValues': !runtime_1.exists(json, 'TagValues') ? undefined : json['TagValues'],
        'tags': !runtime_1.exists(json, 'Tags') ? undefined : json['Tags'],
    };
}
exports.FiltersNetAccessPointFromJSONTyped = FiltersNetAccessPointFromJSONTyped;
function FiltersNetAccessPointToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'NetAccessPointIds': value.netAccessPointIds,
        'NetIds': value.netIds,
        'ServiceNames': value.serviceNames,
        'States': value.states,
        'TagKeys': value.tagKeys,
        'TagValues': value.tagValues,
        'Tags': value.tags,
    };
}
exports.FiltersNetAccessPointToJSON = FiltersNetAccessPointToJSON;
