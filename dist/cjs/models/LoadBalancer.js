"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerToJSON = exports.LoadBalancerFromJSONTyped = exports.LoadBalancerFromJSON = void 0;
const runtime_1 = require("../runtime");
const AccessLog_1 = require("./AccessLog");
const ApplicationStickyCookiePolicy_1 = require("./ApplicationStickyCookiePolicy");
const HealthCheck_1 = require("./HealthCheck");
const Listener_1 = require("./Listener");
const LoadBalancerStickyCookiePolicy_1 = require("./LoadBalancerStickyCookiePolicy");
const ResourceTag_1 = require("./ResourceTag");
const SourceSecurityGroup_1 = require("./SourceSecurityGroup");
function LoadBalancerFromJSON(json) {
    return LoadBalancerFromJSONTyped(json, false);
}
exports.LoadBalancerFromJSON = LoadBalancerFromJSON;
function LoadBalancerFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accessLog': !runtime_1.exists(json, 'AccessLog') ? undefined : AccessLog_1.AccessLogFromJSON(json['AccessLog']),
        'applicationStickyCookiePolicies': !runtime_1.exists(json, 'ApplicationStickyCookiePolicies') ? undefined : (json['ApplicationStickyCookiePolicies'].map(ApplicationStickyCookiePolicy_1.ApplicationStickyCookiePolicyFromJSON)),
        'backendIps': !runtime_1.exists(json, 'BackendIps') ? undefined : json['BackendIps'],
        'backendVmIds': !runtime_1.exists(json, 'BackendVmIds') ? undefined : json['BackendVmIds'],
        'dnsName': !runtime_1.exists(json, 'DnsName') ? undefined : json['DnsName'],
        'healthCheck': !runtime_1.exists(json, 'HealthCheck') ? undefined : HealthCheck_1.HealthCheckFromJSON(json['HealthCheck']),
        'listeners': !runtime_1.exists(json, 'Listeners') ? undefined : (json['Listeners'].map(Listener_1.ListenerFromJSON)),
        'loadBalancerName': !runtime_1.exists(json, 'LoadBalancerName') ? undefined : json['LoadBalancerName'],
        'loadBalancerStickyCookiePolicies': !runtime_1.exists(json, 'LoadBalancerStickyCookiePolicies') ? undefined : (json['LoadBalancerStickyCookiePolicies'].map(LoadBalancerStickyCookiePolicy_1.LoadBalancerStickyCookiePolicyFromJSON)),
        'loadBalancerType': !runtime_1.exists(json, 'LoadBalancerType') ? undefined : json['LoadBalancerType'],
        'netId': !runtime_1.exists(json, 'NetId') ? undefined : json['NetId'],
        'publicIp': !runtime_1.exists(json, 'PublicIp') ? undefined : json['PublicIp'],
        'securityGroups': !runtime_1.exists(json, 'SecurityGroups') ? undefined : json['SecurityGroups'],
        'sourceSecurityGroup': !runtime_1.exists(json, 'SourceSecurityGroup') ? undefined : SourceSecurityGroup_1.SourceSecurityGroupFromJSON(json['SourceSecurityGroup']),
        'subnets': !runtime_1.exists(json, 'Subnets') ? undefined : json['Subnets'],
        'subregionNames': !runtime_1.exists(json, 'SubregionNames') ? undefined : json['SubregionNames'],
        'tags': !runtime_1.exists(json, 'Tags') ? undefined : (json['Tags'].map(ResourceTag_1.ResourceTagFromJSON)),
    };
}
exports.LoadBalancerFromJSONTyped = LoadBalancerFromJSONTyped;
function LoadBalancerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'AccessLog': AccessLog_1.AccessLogToJSON(value.accessLog),
        'ApplicationStickyCookiePolicies': value.applicationStickyCookiePolicies === undefined ? undefined : (value.applicationStickyCookiePolicies.map(ApplicationStickyCookiePolicy_1.ApplicationStickyCookiePolicyToJSON)),
        'BackendIps': value.backendIps,
        'BackendVmIds': value.backendVmIds,
        'DnsName': value.dnsName,
        'HealthCheck': HealthCheck_1.HealthCheckToJSON(value.healthCheck),
        'Listeners': value.listeners === undefined ? undefined : (value.listeners.map(Listener_1.ListenerToJSON)),
        'LoadBalancerName': value.loadBalancerName,
        'LoadBalancerStickyCookiePolicies': value.loadBalancerStickyCookiePolicies === undefined ? undefined : (value.loadBalancerStickyCookiePolicies.map(LoadBalancerStickyCookiePolicy_1.LoadBalancerStickyCookiePolicyToJSON)),
        'LoadBalancerType': value.loadBalancerType,
        'NetId': value.netId,
        'PublicIp': value.publicIp,
        'SecurityGroups': value.securityGroups,
        'SourceSecurityGroup': SourceSecurityGroup_1.SourceSecurityGroupToJSON(value.sourceSecurityGroup),
        'Subnets': value.subnets,
        'SubregionNames': value.subregionNames,
        'Tags': value.tags === undefined ? undefined : (value.tags.map(ResourceTag_1.ResourceTagToJSON)),
    };
}
exports.LoadBalancerToJSON = LoadBalancerToJSON;
