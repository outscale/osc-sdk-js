/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.26
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateVolumeRequest
 */
export interface UpdateVolumeRequest {
    /**
     * If true, checks whether you have the required permissions to perform the action.
     * @type {boolean}
     * @memberof UpdateVolumeRequest
     */
    dryRun?: boolean;
    /**
     * The new number of I/O operations per second (IOPS). This parameter can be specified only if you update an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte. This modification is instantaneous on a cold volume, not on a hot one.
     * @type {number}
     * @memberof UpdateVolumeRequest
     */
    iops?: number;
    /**
     * (cold volume only) The new size of the volume, in gibibytes (GiB). This value must be equal to or greater than the current size of the volume. This modification is not instantaneous.
     * @type {number}
     * @memberof UpdateVolumeRequest
     */
    size?: number;
    /**
     * The ID of the volume you want to update.
     * @type {string}
     * @memberof UpdateVolumeRequest
     */
    volumeId: string;
    /**
     * (cold volume only) The new type of the volume (`standard` \| `io1` \| `gp2`). This modification is instantaneous. If you update to an `io1` volume, you must also specify the `Iops` parameter.
     * @type {string}
     * @memberof UpdateVolumeRequest
     */
    volumeType?: string;
}
export declare function UpdateVolumeRequestFromJSON(json: any): UpdateVolumeRequest;
export declare function UpdateVolumeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateVolumeRequest;
export declare function UpdateVolumeRequestToJSON(value?: UpdateVolumeRequest | null): any;
