"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.24
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualGatewayToJSON = exports.VirtualGatewayFromJSONTyped = exports.VirtualGatewayFromJSON = void 0;
const runtime_1 = require("../runtime");
const NetToVirtualGatewayLink_1 = require("./NetToVirtualGatewayLink");
const ResourceTag_1 = require("./ResourceTag");
function VirtualGatewayFromJSON(json) {
    return VirtualGatewayFromJSONTyped(json, false);
}
exports.VirtualGatewayFromJSON = VirtualGatewayFromJSON;
function VirtualGatewayFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'connectionType': !(0, runtime_1.exists)(json, 'ConnectionType') ? undefined : json['ConnectionType'],
        'netToVirtualGatewayLinks': !(0, runtime_1.exists)(json, 'NetToVirtualGatewayLinks') ? undefined : (json['NetToVirtualGatewayLinks'].map(NetToVirtualGatewayLink_1.NetToVirtualGatewayLinkFromJSON)),
        'state': !(0, runtime_1.exists)(json, 'State') ? undefined : json['State'],
        'tags': !(0, runtime_1.exists)(json, 'Tags') ? undefined : (json['Tags'].map(ResourceTag_1.ResourceTagFromJSON)),
        'virtualGatewayId': !(0, runtime_1.exists)(json, 'VirtualGatewayId') ? undefined : json['VirtualGatewayId'],
    };
}
exports.VirtualGatewayFromJSONTyped = VirtualGatewayFromJSONTyped;
function VirtualGatewayToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ConnectionType': value.connectionType,
        'NetToVirtualGatewayLinks': value.netToVirtualGatewayLinks === undefined ? undefined : (value.netToVirtualGatewayLinks.map(NetToVirtualGatewayLink_1.NetToVirtualGatewayLinkToJSON)),
        'State': value.state,
        'Tags': value.tags === undefined ? undefined : (value.tags.map(ResourceTag_1.ResourceTagToJSON)),
        'VirtualGatewayId': value.virtualGatewayId,
    };
}
exports.VirtualGatewayToJSON = VirtualGatewayToJSON;
