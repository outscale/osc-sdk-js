"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FiltersApiLogToJSON = exports.FiltersApiLogFromJSONTyped = exports.FiltersApiLogFromJSON = void 0;
const runtime_1 = require("../runtime");
function FiltersApiLogFromJSON(json) {
    return FiltersApiLogFromJSONTyped(json, false);
}
exports.FiltersApiLogFromJSON = FiltersApiLogFromJSON;
function FiltersApiLogFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'queryAccessKeys': !(0, runtime_1.exists)(json, 'QueryAccessKeys') ? undefined : json['QueryAccessKeys'],
        'queryApiNames': !(0, runtime_1.exists)(json, 'QueryApiNames') ? undefined : json['QueryApiNames'],
        'queryCallNames': !(0, runtime_1.exists)(json, 'QueryCallNames') ? undefined : json['QueryCallNames'],
        'queryDateAfter': !(0, runtime_1.exists)(json, 'QueryDateAfter') ? undefined : (new Date(json['QueryDateAfter'])),
        'queryDateBefore': !(0, runtime_1.exists)(json, 'QueryDateBefore') ? undefined : (new Date(json['QueryDateBefore'])),
        'queryIpAddresses': !(0, runtime_1.exists)(json, 'QueryIpAddresses') ? undefined : json['QueryIpAddresses'],
        'queryUserAgents': !(0, runtime_1.exists)(json, 'QueryUserAgents') ? undefined : json['QueryUserAgents'],
        'requestIds': !(0, runtime_1.exists)(json, 'RequestIds') ? undefined : json['RequestIds'],
        'responseStatusCodes': !(0, runtime_1.exists)(json, 'ResponseStatusCodes') ? undefined : json['ResponseStatusCodes'],
    };
}
exports.FiltersApiLogFromJSONTyped = FiltersApiLogFromJSONTyped;
function FiltersApiLogToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'QueryAccessKeys': value.queryAccessKeys,
        'QueryApiNames': value.queryApiNames,
        'QueryCallNames': value.queryCallNames,
        'QueryDateAfter': value.queryDateAfter === undefined ? undefined : (value.queryDateAfter.toISOString().substr(0, 10)),
        'QueryDateBefore': value.queryDateBefore === undefined ? undefined : (value.queryDateBefore.toISOString().substr(0, 10)),
        'QueryIpAddresses': value.queryIpAddresses,
        'QueryUserAgents': value.queryUserAgents,
        'RequestIds': value.requestIds,
        'ResponseStatusCodes': value.responseStatusCodes,
    };
}
exports.FiltersApiLogToJSON = FiltersApiLogToJSON;
