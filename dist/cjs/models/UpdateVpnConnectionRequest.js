"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateVpnConnectionRequestToJSON = exports.UpdateVpnConnectionRequestFromJSONTyped = exports.UpdateVpnConnectionRequestFromJSON = void 0;
const runtime_1 = require("../runtime");
const VpnOptions_1 = require("./VpnOptions");
function UpdateVpnConnectionRequestFromJSON(json) {
    return UpdateVpnConnectionRequestFromJSONTyped(json, false);
}
exports.UpdateVpnConnectionRequestFromJSON = UpdateVpnConnectionRequestFromJSON;
function UpdateVpnConnectionRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'clientGatewayId': !runtime_1.exists(json, 'ClientGatewayId') ? undefined : json['ClientGatewayId'],
        'dryRun': !runtime_1.exists(json, 'DryRun') ? undefined : json['DryRun'],
        'virtualGatewayId': !runtime_1.exists(json, 'VirtualGatewayId') ? undefined : json['VirtualGatewayId'],
        'vpnConnectionId': json['VpnConnectionId'],
        'vpnOptions': !runtime_1.exists(json, 'VpnOptions') ? undefined : VpnOptions_1.VpnOptionsFromJSON(json['VpnOptions']),
    };
}
exports.UpdateVpnConnectionRequestFromJSONTyped = UpdateVpnConnectionRequestFromJSONTyped;
function UpdateVpnConnectionRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ClientGatewayId': value.clientGatewayId,
        'DryRun': value.dryRun,
        'VirtualGatewayId': value.virtualGatewayId,
        'VpnConnectionId': value.vpnConnectionId,
        'VpnOptions': VpnOptions_1.VpnOptionsToJSON(value.vpnOptions),
    };
}
exports.UpdateVpnConnectionRequestToJSON = UpdateVpnConnectionRequestToJSON;
