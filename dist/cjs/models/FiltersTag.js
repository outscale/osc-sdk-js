"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FiltersTagToJSON = exports.FiltersTagFromJSONTyped = exports.FiltersTagFromJSON = void 0;
const runtime_1 = require("../runtime");
function FiltersTagFromJSON(json) {
    return FiltersTagFromJSONTyped(json, false);
}
exports.FiltersTagFromJSON = FiltersTagFromJSON;
function FiltersTagFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'keys': !(0, runtime_1.exists)(json, 'Keys') ? undefined : json['Keys'],
        'resourceIds': !(0, runtime_1.exists)(json, 'ResourceIds') ? undefined : json['ResourceIds'],
        'resourceTypes': !(0, runtime_1.exists)(json, 'ResourceTypes') ? undefined : json['ResourceTypes'],
        'values': !(0, runtime_1.exists)(json, 'Values') ? undefined : json['Values'],
    };
}
exports.FiltersTagFromJSONTyped = FiltersTagFromJSONTyped;
function FiltersTagToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Keys': value.keys,
        'ResourceIds': value.resourceIds,
        'ResourceTypes': value.resourceTypes,
        'Values': value.values,
    };
}
exports.FiltersTagToJSON = FiltersTagToJSON;
