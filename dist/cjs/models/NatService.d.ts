/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PublicIpLight } from './PublicIpLight';
import { ResourceTag } from './ResourceTag';
/**
 * Information about the NAT service.
 * @export
 * @interface NatService
 */
export interface NatService {
    /**
     * The ID of the NAT service.
     * @type {string}
     * @memberof NatService
     */
    natServiceId?: string;
    /**
     * The ID of the Net in which the NAT service is.
     * @type {string}
     * @memberof NatService
     */
    netId?: string;
    /**
     * Information about the public IP or IPs associated with the NAT service.
     * @type {Array<PublicIpLight>}
     * @memberof NatService
     */
    publicIps?: Array<PublicIpLight>;
    /**
     * The state of the NAT service (`pending` \| `available` \| `deleting` \| `deleted`).
     * @type {string}
     * @memberof NatService
     */
    state?: string;
    /**
     * The ID of the Subnet in which the NAT service is.
     * @type {string}
     * @memberof NatService
     */
    subnetId?: string;
    /**
     * One or more tags associated with the NAT service.
     * @type {Array<ResourceTag>}
     * @memberof NatService
     */
    tags?: Array<ResourceTag>;
}
export declare function NatServiceFromJSON(json: any): NatService;
export declare function NatServiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): NatService;
export declare function NatServiceToJSON(value?: NatService | null): any;
