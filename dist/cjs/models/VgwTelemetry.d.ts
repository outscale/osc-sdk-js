/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.27
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Information about the current state of a VPN tunnel.
 * @export
 * @interface VgwTelemetry
 */
export interface VgwTelemetry {
    /**
     * The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
     * @type {number}
     * @memberof VgwTelemetry
     */
    acceptedRouteCount?: number;
    /**
     * The date and time (UTC) of the latest state update.
     * @type {string}
     * @memberof VgwTelemetry
     */
    lastStateChangeDate?: string;
    /**
     * The IP on the OUTSCALE side of the tunnel.
     * @type {string}
     * @memberof VgwTelemetry
     */
    outsideIpAddress?: string;
    /**
     * The state of the IPSEC tunnel (`UP` \| `DOWN`).
     * @type {string}
     * @memberof VgwTelemetry
     */
    state?: string;
    /**
     * A description of the current state of the tunnel.
     * @type {string}
     * @memberof VgwTelemetry
     */
    stateDescription?: string;
}
export declare function VgwTelemetryFromJSON(json: any): VgwTelemetry;
export declare function VgwTelemetryFromJSONTyped(json: any, ignoreDiscriminator: boolean): VgwTelemetry;
export declare function VgwTelemetryToJSON(value?: VgwTelemetry | null): any;
