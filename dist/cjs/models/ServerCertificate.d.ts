/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Information about the server certificate.
 * @export
 * @interface ServerCertificate
 */
export interface ServerCertificate {
    /**
     * The date at which the server certificate expires.
     * @type {Date}
     * @memberof ServerCertificate
     */
    expirationDate?: Date;
    /**
     * The ID of the server certificate.
     * @type {string}
     * @memberof ServerCertificate
     */
    id?: string;
    /**
     * The name of the server certificate.
     * @type {string}
     * @memberof ServerCertificate
     */
    name?: string;
    /**
     * The Outscale Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > Outscale Resource Names (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).
     * @type {string}
     * @memberof ServerCertificate
     */
    orn?: string;
    /**
     * The path to the server certificate.
     * @type {string}
     * @memberof ServerCertificate
     */
    path?: string;
    /**
     * The date at which the server certificate has been uploaded.
     * @type {Date}
     * @memberof ServerCertificate
     */
    uploadDate?: Date;
}
export declare function ServerCertificateFromJSON(json: any): ServerCertificate;
export declare function ServerCertificateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerCertificate;
export declare function ServerCertificateToJSON(value?: ServerCertificate | null): any;
