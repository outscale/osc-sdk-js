"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.24
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FiltersNatServiceToJSON = exports.FiltersNatServiceFromJSONTyped = exports.FiltersNatServiceFromJSON = void 0;
const runtime_1 = require("../runtime");
function FiltersNatServiceFromJSON(json) {
    return FiltersNatServiceFromJSONTyped(json, false);
}
exports.FiltersNatServiceFromJSON = FiltersNatServiceFromJSON;
function FiltersNatServiceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'natServiceIds': !(0, runtime_1.exists)(json, 'NatServiceIds') ? undefined : json['NatServiceIds'],
        'netIds': !(0, runtime_1.exists)(json, 'NetIds') ? undefined : json['NetIds'],
        'states': !(0, runtime_1.exists)(json, 'States') ? undefined : json['States'],
        'subnetIds': !(0, runtime_1.exists)(json, 'SubnetIds') ? undefined : json['SubnetIds'],
        'tagKeys': !(0, runtime_1.exists)(json, 'TagKeys') ? undefined : json['TagKeys'],
        'tagValues': !(0, runtime_1.exists)(json, 'TagValues') ? undefined : json['TagValues'],
        'tags': !(0, runtime_1.exists)(json, 'Tags') ? undefined : json['Tags'],
    };
}
exports.FiltersNatServiceFromJSONTyped = FiltersNatServiceFromJSONTyped;
function FiltersNatServiceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'NatServiceIds': value.natServiceIds,
        'NetIds': value.netIds,
        'States': value.states,
        'SubnetIds': value.subnetIds,
        'TagKeys': value.tagKeys,
        'TagValues': value.tagValues,
        'Tags': value.tags,
    };
}
exports.FiltersNatServiceToJSON = FiltersNatServiceToJSON;
