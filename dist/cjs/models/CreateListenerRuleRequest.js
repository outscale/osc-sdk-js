"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.27
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateListenerRuleRequestToJSON = exports.CreateListenerRuleRequestFromJSONTyped = exports.CreateListenerRuleRequestFromJSON = void 0;
const runtime_1 = require("../runtime");
const ListenerRuleForCreation_1 = require("./ListenerRuleForCreation");
const LoadBalancerLight_1 = require("./LoadBalancerLight");
function CreateListenerRuleRequestFromJSON(json) {
    return CreateListenerRuleRequestFromJSONTyped(json, false);
}
exports.CreateListenerRuleRequestFromJSON = CreateListenerRuleRequestFromJSON;
function CreateListenerRuleRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'dryRun': !(0, runtime_1.exists)(json, 'DryRun') ? undefined : json['DryRun'],
        'listener': (0, LoadBalancerLight_1.LoadBalancerLightFromJSON)(json['Listener']),
        'listenerRule': (0, ListenerRuleForCreation_1.ListenerRuleForCreationFromJSON)(json['ListenerRule']),
        'vmIds': json['VmIds'],
    };
}
exports.CreateListenerRuleRequestFromJSONTyped = CreateListenerRuleRequestFromJSONTyped;
function CreateListenerRuleRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'DryRun': value.dryRun,
        'Listener': (0, LoadBalancerLight_1.LoadBalancerLightToJSON)(value.listener),
        'ListenerRule': (0, ListenerRuleForCreation_1.ListenerRuleForCreationToJSON)(value.listenerRule),
        'VmIds': value.vmIds,
    };
}
exports.CreateListenerRuleRequestToJSON = CreateListenerRuleRequestToJSON;
