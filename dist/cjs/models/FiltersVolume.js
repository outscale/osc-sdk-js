"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.26
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FiltersVolumeToJSON = exports.FiltersVolumeFromJSONTyped = exports.FiltersVolumeFromJSON = void 0;
const runtime_1 = require("../runtime");
function FiltersVolumeFromJSON(json) {
    return FiltersVolumeFromJSONTyped(json, false);
}
exports.FiltersVolumeFromJSON = FiltersVolumeFromJSON;
function FiltersVolumeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'creationDates': !(0, runtime_1.exists)(json, 'CreationDates') ? undefined : json['CreationDates'],
        'linkVolumeDeleteOnVmDeletion': !(0, runtime_1.exists)(json, 'LinkVolumeDeleteOnVmDeletion') ? undefined : json['LinkVolumeDeleteOnVmDeletion'],
        'linkVolumeDeviceNames': !(0, runtime_1.exists)(json, 'LinkVolumeDeviceNames') ? undefined : json['LinkVolumeDeviceNames'],
        'linkVolumeLinkDates': !(0, runtime_1.exists)(json, 'LinkVolumeLinkDates') ? undefined : json['LinkVolumeLinkDates'],
        'linkVolumeLinkStates': !(0, runtime_1.exists)(json, 'LinkVolumeLinkStates') ? undefined : json['LinkVolumeLinkStates'],
        'linkVolumeVmIds': !(0, runtime_1.exists)(json, 'LinkVolumeVmIds') ? undefined : json['LinkVolumeVmIds'],
        'snapshotIds': !(0, runtime_1.exists)(json, 'SnapshotIds') ? undefined : json['SnapshotIds'],
        'subregionNames': !(0, runtime_1.exists)(json, 'SubregionNames') ? undefined : json['SubregionNames'],
        'tagKeys': !(0, runtime_1.exists)(json, 'TagKeys') ? undefined : json['TagKeys'],
        'tagValues': !(0, runtime_1.exists)(json, 'TagValues') ? undefined : json['TagValues'],
        'tags': !(0, runtime_1.exists)(json, 'Tags') ? undefined : json['Tags'],
        'volumeIds': !(0, runtime_1.exists)(json, 'VolumeIds') ? undefined : json['VolumeIds'],
        'volumeSizes': !(0, runtime_1.exists)(json, 'VolumeSizes') ? undefined : json['VolumeSizes'],
        'volumeStates': !(0, runtime_1.exists)(json, 'VolumeStates') ? undefined : json['VolumeStates'],
        'volumeTypes': !(0, runtime_1.exists)(json, 'VolumeTypes') ? undefined : json['VolumeTypes'],
    };
}
exports.FiltersVolumeFromJSONTyped = FiltersVolumeFromJSONTyped;
function FiltersVolumeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'CreationDates': value.creationDates,
        'LinkVolumeDeleteOnVmDeletion': value.linkVolumeDeleteOnVmDeletion,
        'LinkVolumeDeviceNames': value.linkVolumeDeviceNames,
        'LinkVolumeLinkDates': value.linkVolumeLinkDates,
        'LinkVolumeLinkStates': value.linkVolumeLinkStates,
        'LinkVolumeVmIds': value.linkVolumeVmIds,
        'SnapshotIds': value.snapshotIds,
        'SubregionNames': value.subregionNames,
        'TagKeys': value.tagKeys,
        'TagValues': value.tagValues,
        'Tags': value.tags,
        'VolumeIds': value.volumeIds,
        'VolumeSizes': value.volumeSizes,
        'VolumeStates': value.volumeStates,
        'VolumeTypes': value.volumeTypes,
    };
}
exports.FiltersVolumeToJSON = FiltersVolumeToJSON;
