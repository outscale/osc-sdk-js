"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListenerRuleToJSON = exports.ListenerRuleFromJSONTyped = exports.ListenerRuleFromJSON = void 0;
const runtime_1 = require("../runtime");
function ListenerRuleFromJSON(json) {
    return ListenerRuleFromJSONTyped(json, false);
}
exports.ListenerRuleFromJSON = ListenerRuleFromJSON;
function ListenerRuleFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'action': !runtime_1.exists(json, 'Action') ? undefined : json['Action'],
        'hostNamePattern': !runtime_1.exists(json, 'HostNamePattern') ? undefined : json['HostNamePattern'],
        'listenerId': !runtime_1.exists(json, 'ListenerId') ? undefined : json['ListenerId'],
        'listenerRuleId': !runtime_1.exists(json, 'ListenerRuleId') ? undefined : json['ListenerRuleId'],
        'listenerRuleName': !runtime_1.exists(json, 'ListenerRuleName') ? undefined : json['ListenerRuleName'],
        'pathPattern': !runtime_1.exists(json, 'PathPattern') ? undefined : json['PathPattern'],
        'priority': !runtime_1.exists(json, 'Priority') ? undefined : json['Priority'],
        'vmIds': !runtime_1.exists(json, 'VmIds') ? undefined : json['VmIds'],
    };
}
exports.ListenerRuleFromJSONTyped = ListenerRuleFromJSONTyped;
function ListenerRuleToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Action': value.action,
        'HostNamePattern': value.hostNamePattern,
        'ListenerId': value.listenerId,
        'ListenerRuleId': value.listenerRuleId,
        'ListenerRuleName': value.listenerRuleName,
        'PathPattern': value.pathPattern,
        'Priority': value.priority,
        'VmIds': value.vmIds,
    };
}
exports.ListenerRuleToJSON = ListenerRuleToJSON;
