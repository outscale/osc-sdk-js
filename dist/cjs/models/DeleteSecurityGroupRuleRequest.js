"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.22
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteSecurityGroupRuleRequestToJSON = exports.DeleteSecurityGroupRuleRequestFromJSONTyped = exports.DeleteSecurityGroupRuleRequestFromJSON = void 0;
const runtime_1 = require("../runtime");
const SecurityGroupRule_1 = require("./SecurityGroupRule");
function DeleteSecurityGroupRuleRequestFromJSON(json) {
    return DeleteSecurityGroupRuleRequestFromJSONTyped(json, false);
}
exports.DeleteSecurityGroupRuleRequestFromJSON = DeleteSecurityGroupRuleRequestFromJSON;
function DeleteSecurityGroupRuleRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'dryRun': !(0, runtime_1.exists)(json, 'DryRun') ? undefined : json['DryRun'],
        'flow': json['Flow'],
        'fromPortRange': !(0, runtime_1.exists)(json, 'FromPortRange') ? undefined : json['FromPortRange'],
        'ipProtocol': !(0, runtime_1.exists)(json, 'IpProtocol') ? undefined : json['IpProtocol'],
        'ipRange': !(0, runtime_1.exists)(json, 'IpRange') ? undefined : json['IpRange'],
        'rules': !(0, runtime_1.exists)(json, 'Rules') ? undefined : (json['Rules'].map(SecurityGroupRule_1.SecurityGroupRuleFromJSON)),
        'securityGroupAccountIdToUnlink': !(0, runtime_1.exists)(json, 'SecurityGroupAccountIdToUnlink') ? undefined : json['SecurityGroupAccountIdToUnlink'],
        'securityGroupId': json['SecurityGroupId'],
        'securityGroupNameToUnlink': !(0, runtime_1.exists)(json, 'SecurityGroupNameToUnlink') ? undefined : json['SecurityGroupNameToUnlink'],
        'toPortRange': !(0, runtime_1.exists)(json, 'ToPortRange') ? undefined : json['ToPortRange'],
    };
}
exports.DeleteSecurityGroupRuleRequestFromJSONTyped = DeleteSecurityGroupRuleRequestFromJSONTyped;
function DeleteSecurityGroupRuleRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'DryRun': value.dryRun,
        'Flow': value.flow,
        'FromPortRange': value.fromPortRange,
        'IpProtocol': value.ipProtocol,
        'IpRange': value.ipRange,
        'Rules': value.rules === undefined ? undefined : (value.rules.map(SecurityGroupRule_1.SecurityGroupRuleToJSON)),
        'SecurityGroupAccountIdToUnlink': value.securityGroupAccountIdToUnlink,
        'SecurityGroupId': value.securityGroupId,
        'SecurityGroupNameToUnlink': value.securityGroupNameToUnlink,
        'ToPortRange': value.toPortRange,
    };
}
exports.DeleteSecurityGroupRuleRequestToJSON = DeleteSecurityGroupRuleRequestToJSON;
