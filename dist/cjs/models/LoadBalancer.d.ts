/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.19
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AccessLog } from './AccessLog';
import { ApplicationStickyCookiePolicy } from './ApplicationStickyCookiePolicy';
import { HealthCheck } from './HealthCheck';
import { Listener } from './Listener';
import { LoadBalancerStickyCookiePolicy } from './LoadBalancerStickyCookiePolicy';
import { ResourceTag } from './ResourceTag';
import { SourceSecurityGroup } from './SourceSecurityGroup';
/**
 * Information about the load balancer.
 * @export
 * @interface LoadBalancer
 */
export interface LoadBalancer {
    /**
     *
     * @type {AccessLog}
     * @memberof LoadBalancer
     */
    accessLog?: AccessLog;
    /**
     * The stickiness policies defined for the load balancer.
     * @type {Array<ApplicationStickyCookiePolicy>}
     * @memberof LoadBalancer
     */
    applicationStickyCookiePolicies?: Array<ApplicationStickyCookiePolicy>;
    /**
     * One or more public IPs of back-end VMs.
     * @type {Array<string>}
     * @memberof LoadBalancer
     */
    backendIps?: Array<string>;
    /**
     * One or more IDs of back-end VMs for the load balancer.
     * @type {Array<string>}
     * @memberof LoadBalancer
     */
    backendVmIds?: Array<string>;
    /**
     * The DNS name of the load balancer.
     * @type {string}
     * @memberof LoadBalancer
     */
    dnsName?: string;
    /**
     *
     * @type {HealthCheck}
     * @memberof LoadBalancer
     */
    healthCheck?: HealthCheck;
    /**
     * The listeners for the load balancer.
     * @type {Array<Listener>}
     * @memberof LoadBalancer
     */
    listeners?: Array<Listener>;
    /**
     * The name of the load balancer.
     * @type {string}
     * @memberof LoadBalancer
     */
    loadBalancerName?: string;
    /**
     * The policies defined for the load balancer.
     * @type {Array<LoadBalancerStickyCookiePolicy>}
     * @memberof LoadBalancer
     */
    loadBalancerStickyCookiePolicies?: Array<LoadBalancerStickyCookiePolicy>;
    /**
     * The type of load balancer. Valid only for load balancers in a Net.<br />
     * If `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP.<br />
     * If `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP.
     * @type {string}
     * @memberof LoadBalancer
     */
    loadBalancerType?: string;
    /**
     * The ID of the Net for the load balancer.
     * @type {string}
     * @memberof LoadBalancer
     */
    netId?: string;
    /**
     * (internet-facing only) The public IP associated with the load balancer.
     * @type {string}
     * @memberof LoadBalancer
     */
    publicIp?: string;
    /**
     * One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.
     * @type {Array<string>}
     * @memberof LoadBalancer
     */
    securityGroups?: Array<string>;
    /**
     *
     * @type {SourceSecurityGroup}
     * @memberof LoadBalancer
     */
    sourceSecurityGroup?: SourceSecurityGroup;
    /**
     * The ID of the Subnet in which the load balancer was created.
     * @type {Array<string>}
     * @memberof LoadBalancer
     */
    subnets?: Array<string>;
    /**
     * The ID of the Subregion in which the load balancer was created.
     * @type {Array<string>}
     * @memberof LoadBalancer
     */
    subregionNames?: Array<string>;
    /**
     * One or more tags associated with the load balancer.
     * @type {Array<ResourceTag>}
     * @memberof LoadBalancer
     */
    tags?: Array<ResourceTag>;
}
export declare function LoadBalancerFromJSON(json: any): LoadBalancer;
export declare function LoadBalancerFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoadBalancer;
export declare function LoadBalancerToJSON(value?: LoadBalancer | null): any;
