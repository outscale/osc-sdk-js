/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.25
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LinkNic } from './LinkNic';
import { LinkPublicIp } from './LinkPublicIp';
import { PrivateIp } from './PrivateIp';
import { ResourceTag } from './ResourceTag';
import { SecurityGroupLight } from './SecurityGroupLight';
/**
 * Information about the NIC.
 * @export
 * @interface Nic
 */
export interface Nic {
    /**
     * The account ID of the owner of the NIC.
     * @type {string}
     * @memberof Nic
     */
    accountId?: string;
    /**
     * The description of the NIC.
     * @type {string}
     * @memberof Nic
     */
    description?: string;
    /**
     * (Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net.
     * @type {boolean}
     * @memberof Nic
     */
    isSourceDestChecked?: boolean;
    /**
     *
     * @type {LinkNic}
     * @memberof Nic
     */
    linkNic?: LinkNic;
    /**
     *
     * @type {LinkPublicIp}
     * @memberof Nic
     */
    linkPublicIp?: LinkPublicIp;
    /**
     * The Media Access Control (MAC) address of the NIC.
     * @type {string}
     * @memberof Nic
     */
    macAddress?: string;
    /**
     * The ID of the Net for the NIC.
     * @type {string}
     * @memberof Nic
     */
    netId?: string;
    /**
     * The ID of the NIC.
     * @type {string}
     * @memberof Nic
     */
    nicId?: string;
    /**
     * The name of the private DNS.
     * @type {string}
     * @memberof Nic
     */
    privateDnsName?: string;
    /**
     * The private IPs of the NIC.
     * @type {Array<PrivateIp>}
     * @memberof Nic
     */
    privateIps?: Array<PrivateIp>;
    /**
     * One or more IDs of security groups for the NIC.
     * @type {Array<SecurityGroupLight>}
     * @memberof Nic
     */
    securityGroups?: Array<SecurityGroupLight>;
    /**
     * The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
     * @type {string}
     * @memberof Nic
     */
    state?: string;
    /**
     * The ID of the Subnet.
     * @type {string}
     * @memberof Nic
     */
    subnetId?: string;
    /**
     * The Subregion in which the NIC is located.
     * @type {string}
     * @memberof Nic
     */
    subregionName?: string;
    /**
     * One or more tags associated with the NIC.
     * @type {Array<ResourceTag>}
     * @memberof Nic
     */
    tags?: Array<ResourceTag>;
}
export declare function NicFromJSON(json: any): Nic;
export declare function NicFromJSONTyped(json: any, ignoreDiscriminator: boolean): Nic;
export declare function NicToJSON(value?: Nic | null): any;
